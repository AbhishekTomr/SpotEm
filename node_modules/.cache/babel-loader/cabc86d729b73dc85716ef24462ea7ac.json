{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek/Desktop/quiz-me/src/components/Questions/Questions.js\";\nimport { Fragment, useEffect, useState, useRef } from 'react';\nimport styles from '../PlayQuiz/PlayQuiz.module.css';\nimport Button from '../UI/Button/Button';\nimport Input from '../UI/Input/Input';\nimport { useDispatch } from 'react-redux';\nimport UserActions from '../../store/userslice';\nimport React from 'react';\nimport Image from '../UI/Image/Image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet Question = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quesNo\",\n      className: styles.questionNo,\n      children: [\"Question Number : \", no + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"question\",\n      className: styles.question,\n      children: Question.question.map((item, index) => /*#__PURE__*/_jsxDEV(Image, {\n        src: item.img,\n        onClick: checkCorrect(item.id)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 54\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"correctAns\",\n      className: styles.correct,\n      children: [isCorrect && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.correctAns,\n        children: \"Correct Answer !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 31\n      }, this), isIncorrect && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.wrongAns,\n        children: [\"Wrong Answer \", ans]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"btn-wrap\"],\n      children: [!isFinal && /*#__PURE__*/_jsxDEV(Button, {\n        data: {\n          id: 'nextQues',\n          className: styles.btn,\n          ref: next,\n          onClick: () => {\n            checkAnswer(true);\n          }\n        },\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 30\n      }, this), isFinal && /*#__PURE__*/_jsxDEV(Button, {\n        data: {\n          id: 'finishQues',\n          className: styles.btn,\n          ref: finish,\n          onClick: () => {\n            checkAnswer(true);\n          }\n        },\n        children: \"Finish Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/abhishek/Desktop/quiz-me/src/components/Questions/Questions.js"],"names":["Fragment","useEffect","useState","useRef","styles","Button","Input","useDispatch","UserActions","React","Image","Question","props","questionNo","no","question","map","item","index","img","checkCorrect","id","correct","isCorrect","correctAns","isIncorrect","wrongAns","ans","isFinal","className","btn","ref","next","onClick","checkAnswer","finish"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,EAAuCC,MAAvC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;;AAGA,IAAIC,QAAQ,GAAIC,KAAD,IAAW;AAEtB,sBACI,QAAC,QAAD;AAAA,4BACQ;AAAK,MAAA,EAAE,EAAC,QAAR;AAAiB,MAAA,SAAS,EAAER,MAAM,CAACS,UAAnC;AAAA,uCAAkEC,EAAE,GAAC,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA,YADR,eAEQ;AAAK,MAAA,EAAE,EAAC,UAAR;AAAmB,MAAA,SAAS,EAAEV,MAAM,CAACW,QAArC;AAAA,gBACCJ,QAAQ,CAACI,QAAT,CAAkBC,GAAlB,CAAsB,CAACC,IAAD,EAAMC,KAAN,kBAAc,QAAC,KAAD;AAAmB,QAAA,GAAG,EAAED,IAAI,CAACE,GAA7B;AAAkC,QAAA,OAAO,EAAEC,YAAY,CAACH,IAAI,CAACI,EAAN;AAAvD,SAAYH,KAAZ;AAAA;AAAA;AAAA;AAAA,cAApC;AADD;AAAA;AAAA;AAAA;AAAA,YAFR,eAKQ;AAAK,MAAA,EAAE,EAAC,YAAR;AAAqB,MAAA,SAAS,EAAEd,MAAM,CAACkB,OAAvC;AAAA,iBACCC,SAAS,iBAAI;AAAG,QAAA,SAAS,EAAEnB,MAAM,CAACoB,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADd,EAECC,WAAW,iBAAI;AAAG,QAAA,SAAS,EAAErB,MAAM,CAACsB,QAArB;AAAA,oCAA6CC,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,YALR,eASQ;AAAK,MAAA,SAAS,EAAEvB,MAAM,CAAC,UAAD,CAAtB;AAAA,iBACC,CAACwB,OAAD,iBAAY,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE;AAACP,UAAAA,EAAE,EAAC,UAAJ;AAAeQ,UAAAA,SAAS,EAACzB,MAAM,CAAC0B,GAAhC;AAAoCC,UAAAA,GAAG,EAACC,IAAxC;AAA6CC,UAAAA,OAAO,EAAC,MAAI;AAACC,YAAAA,WAAW,CAAC,IAAD,CAAX;AAAkB;AAA5E,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADb,EAECN,OAAO,iBAAI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE;AAACP,UAAAA,EAAE,EAAC,YAAJ;AAAiBQ,UAAAA,SAAS,EAACzB,MAAM,CAAC0B,GAAlC;AAAsCC,UAAAA,GAAG,EAACI,MAA1C;AAAiDF,UAAAA,OAAO,EAAC,MAAI;AAACC,YAAAA,WAAW,CAAC,IAAD,CAAX;AAAkB;AAAhF,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,YATR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAlBD;;KAAIvB,Q;AAoBJ,eAAeA,QAAf","sourcesContent":["import { Fragment, useEffect, useState,useRef } from 'react'\nimport styles from '../PlayQuiz/PlayQuiz.module.css'\nimport Button from '../UI/Button/Button'\nimport Input from '../UI/Input/Input';\nimport {useDispatch} from 'react-redux';\nimport UserActions from '../../store/userslice'\nimport React from 'react';\nimport Image from '../UI/Image/Image';\n\n\nlet Question = (props) => {\n\n    return (\n        <Fragment>\n                <div id='quesNo' className={styles.questionNo}>Question Number : {no+1}</div>\n                <div id='question' className={styles.question}>\n                {Question.question.map((item,index)=><Image key={index} src={item.img} onClick={checkCorrect(item.id)}></Image>)}\n                </div>\n                <div id='correctAns' className={styles.correct}>\n                {isCorrect && <p className={styles.correctAns}>Correct Answer !</p>}\n                {isIncorrect && <p className={styles.wrongAns}>Wrong Answer {ans}</p>}\n                </div>\n                <div className={styles[\"btn-wrap\"]}>\n                {!isFinal && <Button data={{id:'nextQues',className:styles.btn,ref:next,onClick:()=>{checkAnswer(true)}}}>Next Question</Button>}\n                {isFinal && <Button data={{id:'finishQues',className:styles.btn,ref:finish,onClick:()=>{checkAnswer(true)}}}>Finish Quiz</Button>}\n                </div>\n        </Fragment>\n    )\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}