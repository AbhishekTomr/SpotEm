{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nlet userSlice = createSlice({\n  name: 'UserInfo',\n  initialState: [],\n  reducers: {\n    setData: (state, payload) => {\n      state = state.push({\n        id: state.length + 1,\n        uname: payload.uname,\n        questions: payload.questions ? payload.questions : 10,\n        gameState: payload.gameState\n      });\n    },\n    changeGameState: (state, payload) => {\n      state[payload.id].gameState = payload.gameState;\n    }\n  }\n});\nlet UserActions = userSlice.actions;\nexport { userSlice };\nexport default UserActions;","map":{"version":3,"sources":["/Users/abhishek/Desktop/quiz-me/src/store/userslice.js"],"names":["createSlice","userSlice","name","initialState","reducers","setData","state","payload","push","id","length","uname","questions","gameState","changeGameState","UserActions","actions"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAGA,IAAIC,SAAS,GAAGD,WAAW,CAAC;AACxBE,EAAAA,IAAI,EAAG,UADiB;AAExBC,EAAAA,YAAY,EAAG,EAFS;AAGxBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAG,CAACC,KAAD,EAAOC,OAAP,KAAmB;AACzBD,MAAAA,KAAK,GAAGA,KAAK,CAACE,IAAN,CAAW;AACnBC,QAAAA,EAAE,EAAGH,KAAK,CAACI,MAAN,GAAa,CADC;AAEnBC,QAAAA,KAAK,EAAGJ,OAAO,CAACI,KAFG;AAGnBC,QAAAA,SAAS,EAAGL,OAAO,CAACK,SAAR,GAAkBL,OAAO,CAACK,SAA1B,GAAoC,EAH7B;AAInBC,QAAAA,SAAS,EAAGN,OAAO,CAACM;AAJD,OAAX,CAAR;AAOH,KATK;AAUNC,IAAAA,eAAe,EAAE,CAACR,KAAD,EAAOC,OAAP,KAAmB;AAChCD,MAAAA,KAAK,CAACC,OAAO,CAACE,EAAT,CAAL,CAAkBI,SAAlB,GAA8BN,OAAO,CAACM,SAAtC;AACH;AAZK;AAHc,CAAD,CAA3B;AAqBA,IAAIE,WAAW,GAAGd,SAAS,CAACe,OAA5B;AACA,SAAQf,SAAR;AACA,eAAec,WAAf","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\"\n\n\nlet userSlice = createSlice({\n    name : 'UserInfo',\n    initialState : [],\n    reducers: {\n        setData : (state,payload) => {\n            state = state.push({\n            id : state.length+1,\n            uname : payload.uname,\n            questions : payload.questions?payload.questions:10,\n            gameState : payload.gameState\n            }\n            )    \n        },\n        changeGameState: (state,payload) => {\n            state[payload.id].gameState = payload.gameState;\n        }\n    }\n    }\n)\n\n\nlet UserActions = userSlice.actions;\nexport {userSlice};\nexport default UserActions;"]},"metadata":{},"sourceType":"module"}