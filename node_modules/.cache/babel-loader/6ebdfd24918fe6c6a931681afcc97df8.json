{"ast":null,"code":"import _slicedToArray from\"/Users/abhishek/Desktop/quiz-me/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import styles from'./PlayQuiz.module.css';import Question from\"../Questions/Questions\";import{useSelector}from'react-redux';import{useState}from'react';import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PlayQuiz=function PlayQuiz(props){var data=useSelector(function(state){return state.userInfo[props.currentPlayer-1];});var quesList=data.questionsList;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),questionNum=_useState2[0],changeQuesNo=_useState2[1];var userName=data.uname;var total=data.questions;var correctNo=quesList.reduce(function(count,item){if(item.correct){return+count+1;}else{return+count+0;}},0);var nextQues=function nextQues(){if(questionNum!==total-1)changeQuesNo(function(previous){return previous+1;});else if(questionNum==total-1)props.endQuiz(2);};return/*#__PURE__*/_jsxs(\"div\",{className:styles[\"game-panel\"],children:[/*#__PURE__*/_jsx(Question,{total:total,Qno:questionNum,user:props.currentPlayer-1,Question:quesList[questionNum],nextQues:nextQues}),/*#__PURE__*/_jsx(\"div\",{className:styles.uname,children:userName}),/*#__PURE__*/_jsxs(\"div\",{id:\"status\",className:styles.status,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.questionLeft,children:[\"Total : \",total]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.score,children:[\"Correct: \",correctNo]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.left,children:[\"Left: \",total-questionNum]})]})]});};export default PlayQuiz;","map":{"version":3,"sources":["/Users/abhishek/Desktop/quiz-me/src/components/PlayQuiz/PlayQuiz.js"],"names":["styles","Question","useSelector","useState","React","PlayQuiz","props","data","state","userInfo","currentPlayer","quesList","questionsList","questionNum","changeQuesNo","userName","uname","total","questions","correctNo","reduce","count","item","correct","nextQues","previous","endQuiz","status","questionLeft","score","left"],"mappings":"qHAAA,MAAOA,CAAAA,MAAP,KAAmB,uBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,OAAQC,WAAR,KAA0B,aAA1B,CACA,OAAQC,QAAR,KAAuB,OAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEA,GAAIC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CACtB,GAAIC,CAAAA,IAAI,CAAGL,WAAW,CAAC,SAACM,KAAD,QAASA,CAAAA,KAAK,CAACC,QAAN,CAAeH,KAAK,CAACI,aAAN,CAAoB,CAAnC,CAAT,EAAD,CAAtB,CACA,GAAIC,CAAAA,QAAQ,CAAGJ,IAAI,CAACK,aAApB,CACA,cAAiCT,QAAQ,CAAC,CAAD,CAAzC,wCAAKU,WAAL,eAAiBC,YAAjB,eAGA,GAAIC,CAAAA,QAAQ,CAAGR,IAAI,CAACS,KAApB,CACA,GAAIC,CAAAA,KAAK,CAAGV,IAAI,CAACW,SAAjB,CAEA,GAAIC,CAAAA,SAAS,CAAGR,QAAQ,CAACS,MAAT,CAAgB,SAACC,KAAD,CAAOC,IAAP,CAAc,CAC1C,GAAGA,IAAI,CAACC,OAAR,CACA,CAEI,MAAO,CAACF,KAAD,CAAO,CAAd,CACH,CAJD,IAKI,CACA,MAAO,CAACA,KAAD,CAAO,CAAd,CACH,CACJ,CATe,CASd,CATc,CAAhB,CAWA,GAAIG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAI,CACf,GAAGX,WAAW,GAAGI,KAAK,CAAC,CAAvB,CACAH,YAAY,CAAC,SAAAW,QAAQ,QAAEA,CAAAA,QAAQ,CAAC,CAAX,EAAT,CAAZ,CADA,IAEK,IAAGZ,WAAW,EAAEI,KAAK,CAAC,CAAtB,CACLX,KAAK,CAACoB,OAAN,CAAc,CAAd,EACH,CALD,CAQA,mBACQ,aAAK,SAAS,CAAE1B,MAAM,CAAC,YAAD,CAAtB,wBACI,KAAC,QAAD,EACA,KAAK,CAAIiB,KADT,CAEA,GAAG,CAAIJ,WAFP,CAGA,IAAI,CAAIP,KAAK,CAACI,aAAN,CAAoB,CAH5B,CAIA,QAAQ,CAAIC,QAAQ,CAACE,WAAD,CAJpB,CAKA,QAAQ,CAAEW,QALV,EADJ,cAOI,YAAK,SAAS,CAAExB,MAAM,CAACgB,KAAvB,UAA+BD,QAA/B,EAPJ,cAQI,aAAK,EAAE,CAAC,QAAR,CAAiB,SAAS,CAAEf,MAAM,CAAC2B,MAAnC,wBACA,aAAK,SAAS,CAAE3B,MAAM,CAAC4B,YAAvB,sBAA8CX,KAA9C,GADA,cAEA,aAAK,SAAS,CAAEjB,MAAM,CAAC6B,KAAvB,uBAAwCV,SAAxC,GAFA,cAGA,aAAK,SAAS,CAAEnB,MAAM,CAAC8B,IAAvB,oBAAoCb,KAAK,CAAEJ,WAA3C,GAHA,GARJ,GADR,CAgBH,CA5CD,CA8CA,cAAeR,CAAAA,QAAf","sourcesContent":["import styles from './PlayQuiz.module.css'\nimport Question from \"../Questions/Questions\"\nimport {useSelector} from 'react-redux';\nimport {useState} from 'react';\nimport React from 'react';\n\nlet PlayQuiz = (props) => {\n    let data = useSelector((state)=>state.userInfo[props.currentPlayer-1]);\n    let quesList = data.questionsList;\n    let [questionNum,changeQuesNo] = useState(0);\n\n\n    let userName = data.uname;\n    let total = data.questions;\n    \n    let correctNo = quesList.reduce((count,item)=>{\n        if(item.correct)\n        {\n            \n            return +count+1;\n        }\n        else{\n            return +count+0;\n        }\n    },0)\n\n    let nextQues = ()=>{\n        if(questionNum!==total-1)\n        changeQuesNo(previous=>previous+1);\n        else if(questionNum==total-1)\n        props.endQuiz(2);\n    }\n\n\n    return(\n            <div className={styles[\"game-panel\"]}>\n                <Question \n                total = {total}\n                Qno = {questionNum}\n                user = {props.currentPlayer-1}\n                Question = {quesList[questionNum]} \n                nextQues={nextQues}/>\n                <div className={styles.uname}>{userName}</div>\n                <div id='status' className={styles.status}>\n                <div className={styles.questionLeft}>Total : {total}</div>\n                <div className={styles.score}>Correct: {correctNo}</div>\n                <div className={styles.left}>Left: {total- questionNum}</div>\n                </div>\n            </div>  \n    )\n}\n\nexport default PlayQuiz;"]},"metadata":{},"sourceType":"module"}