{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek/Desktop/quiz-me/src/components/Questions/Questions.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect, useState, useRef } from 'react';\nimport styles from '../PlayQuiz/PlayQuiz.module.css';\nimport Button from '../UI/Button/Button';\nimport Input from '../UI/Input/Input';\nimport { useDispatch } from 'react-redux';\nimport UserActions from '../../store/userslice';\nimport React from 'react';\nimport Image from '../UI/Image/Image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet Question = props => {\n  _s();\n\n  let no = props.Qno;\n  let [ansInp, changeAnsInp] = useState('');\n  let isFinal = no == props.total - 1 ? true : false;\n  let [isCorrect, changeIsCorrect] = useState(false);\n  let [isIncorrect, changeIsIncorrect] = useState(false);\n  let [isAnswered, changeIsAnswered] = useState(false);\n  let dispatchFn = useDispatch();\n  let next = useRef();\n  let finish = useRef();\n  let inp = useRef();\n\n  let checkAnswer = flag => {\n    inp.current.setAttribute('disabled', 'true'); //checkAns\n\n    let data = ansInp;\n\n    if (data.trim().length == 0) {\n      changeIsAnswered(false);\n      changeIsCorrect(false);\n      changeIsIncorrect(true);\n    } else if (data == ans) {\n      changeIsAnswered(true);\n      changeIsIncorrect(false);\n      changeIsCorrect(true);\n    } else {\n      changeIsAnswered(true);\n      changeIsCorrect(false);\n      changeIsIncorrect(true);\n    }\n\n    if (flag) {\n      //when next Question is pressed;\n      changeAnsInp('');\n      inp.current.removeAttribute('disabled');\n      dispatchFn(UserActions.changeAns({\n        id: no,\n        user: props.user,\n        isAns: isAnswered\n      }));\n      dispatchFn(UserActions.changeCorrect({\n        id: no,\n        user: props.user,\n        isCorrect: isCorrect\n      }));\n      props.nextQues();\n    }\n  };\n\n  useEffect(() => {\n    changeIsAnswered(false);\n    changeIsCorrect(false);\n    changeIsIncorrect(false);\n    inp.current.focus();\n  }, [no]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quesNo\",\n      className: styles.questionNo,\n      children: [\"Question Number : \", no + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"question\",\n      className: styles.question,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: {\n          className: styles.opr,\n          id: 'op3',\n          value: ansInp,\n          ref: inp,\n          onChange: e => {\n            changeAnsInp(e.target.value);\n          },\n          disabled: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"correctAns\",\n      className: styles.correct,\n      children: [isCorrect && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.correctAns,\n        children: \"Correct Answer !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 31\n      }, this), isIncorrect && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.wrongAns,\n        children: [\"Wrong Answer, Correct Answer is \", ans]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"btn-wrap\"],\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        data: {\n          id: 'checkAns',\n          className: styles.btn,\n          onClick: () => {\n            checkAnswer(false);\n          }\n        },\n        children: \"Submit Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), !isFinal && /*#__PURE__*/_jsxDEV(Button, {\n        data: {\n          id: 'nextQues',\n          className: styles.btn,\n          ref: next,\n          onClick: () => {\n            checkAnswer(true);\n          }\n        },\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 30\n      }, this), isFinal && /*#__PURE__*/_jsxDEV(Button, {\n        data: {\n          id: 'finishQues',\n          className: styles.btn,\n          ref: finish,\n          onClick: () => {\n            checkAnswer(true);\n          }\n        },\n        children: \"Finish Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Question, \"fb4rcpaQEx24l2xEF0w82uOmho4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/abhishek/Desktop/quiz-me/src/components/Questions/Questions.js"],"names":["Fragment","useEffect","useState","useRef","styles","Button","Input","useDispatch","UserActions","React","Image","Question","props","no","Qno","ansInp","changeAnsInp","isFinal","total","isCorrect","changeIsCorrect","isIncorrect","changeIsIncorrect","isAnswered","changeIsAnswered","dispatchFn","next","finish","inp","checkAnswer","flag","current","setAttribute","data","trim","length","ans","removeAttribute","changeAns","id","user","isAns","changeCorrect","nextQues","focus","questionNo","question","className","opr","value","ref","onChange","e","target","disabled","correct","correctAns","wrongAns","btn","onClick"],"mappings":"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","sourcesContent":["import { Fragment, useEffect, useState,useRef } from 'react'\nimport styles from '../PlayQuiz/PlayQuiz.module.css'\nimport Button from '../UI/Button/Button'\nimport Input from '../UI/Input/Input';\nimport {useDispatch} from 'react-redux';\nimport UserActions from '../../store/userslice'\nimport React from 'react';\nimport Image from '../UI/Image/Image';\n\n\nlet Question = (props) => {\n\n    let no = props.Qno;\n    let [ansInp,changeAnsInp] = useState('');\n    let isFinal = (no==props.total-1)?true:false;\n    let [isCorrect,changeIsCorrect] = useState(false);\n    let [isIncorrect,changeIsIncorrect] = useState(false);\n    let [isAnswered,changeIsAnswered] = useState(false);\n    let dispatchFn = useDispatch();\n    let next = useRef();\n    let finish = useRef();\n    let inp = useRef();\n    \n    let checkAnswer =(flag)=>{\n         inp.current.setAttribute('disabled','true');\n         //checkAns\n        let data = ansInp;\n        if(data.trim().length==0)\n            {\n                changeIsAnswered(false);\n                changeIsCorrect(false);\n                changeIsIncorrect(true);\n            }\n            else if(data==ans)\n            {   changeIsAnswered(true);\n                changeIsIncorrect(false);\n                changeIsCorrect(true);\n            }\n            else{\n                changeIsAnswered(true);\n                changeIsCorrect(false);\n                changeIsIncorrect(true);\n            }\n        if(flag){\n            //when next Question is pressed;\n            changeAnsInp('');\n            inp.current.removeAttribute('disabled');\n            dispatchFn(UserActions.changeAns({id:no,user:props.user,isAns:isAnswered}));\n            dispatchFn(UserActions.changeCorrect({id:no,user:props.user,isCorrect:isCorrect}));\n            props.nextQues();\n        }\n    }\n    useEffect(()=>{\n        changeIsAnswered(false);\n        changeIsCorrect(false);\n        changeIsIncorrect(false);\n        inp.current.focus();\n    },[no]);\n    return (\n        <Fragment>\n                <div id='quesNo' className={styles.questionNo}>Question Number : {no+1}</div>\n                <div id='question' className={styles.question}>\n                <Image src=\"\"></Image>\n\n                <Input data={{className:styles.opr,id:'op3',value:ansInp,ref:inp,onChange:(e)=>{changeAnsInp(e.target.value)},disabled:false}}></Input>\n                </div>\n                <div id='correctAns' className={styles.correct}>\n                {isCorrect && <p className={styles.correctAns}>Correct Answer !</p>}\n                {isIncorrect && <p className={styles.wrongAns}>Wrong Answer, Correct Answer is {ans}</p>}\n                </div>\n                <div className={styles[\"btn-wrap\"]}>\n                <Button data={{id:'checkAns',className:styles.btn,onClick:()=>{checkAnswer(false)}}}>Submit Answer</Button>\n                {!isFinal && <Button data={{id:'nextQues',className:styles.btn,ref:next,onClick:()=>{checkAnswer(true)}}}>Next Question</Button>}\n                {isFinal && <Button data={{id:'finishQues',className:styles.btn,ref:finish,onClick:()=>{checkAnswer(true)}}}>Finish Quiz</Button>}\n                </div>\n        </Fragment>\n    )\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}