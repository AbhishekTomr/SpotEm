{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek/Desktop/quiz-me/src/components/PlayQuiz/PlayQuiz.js\",\n    _s = $RefreshSig$();\n\nimport styles from './PlayQuiz.module.css';\nimport Button from '../UI/Button/Button';\nimport { useSelector } from 'react-redux';\nimport { useRef, useState } from 'react';\nimport Input from '../UI/Input/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet PlayQuiz = props => {\n  _s();\n\n  let returnOp = (a, b, opr) => {\n    switch (opr) {\n      case '+':\n        return a + b;\n        break;\n\n      case '-':\n        return a - b;\n        break;\n\n      case '/':\n        return a / b;\n        break;\n\n      case '*':\n        return a * b;\n        break;\n\n      default:\n        return 'n.a';\n    }\n  };\n\n  let checkAns = (data, flag) => {\n    if (flag) {\n      if (data == result) {\n        wrongP.current.style.display = 'none';\n        correctP.current.style.display = 'initial';\n      } else {\n        correctP.current.style.display = 'none';\n        wrongP.current.style.display = 'initial';\n      }\n\n      return;\n    } else {\n      //update visited\n      ansInp.current.value = '';\n      changeVisited(previousState => {\n        let newState = previousState;\n        newState.push(quesList[currentQuestion]);\n        return newState;\n      });\n\n      if (data.trim().length == 0) {\n        //update not answered\n        quesList[currentQuestion].ans = false;\n        changeUnAns(previousState => {\n          let newState = previousState;\n          newState.push(quesList[currentQuestion]);\n          return newState;\n        });\n      }\n\n      if (data == result) {\n        //update correct\n        quesList[currentQuestion].ans = true;\n        quesList[currentQuestion].correct = true;\n        changeCorrect(previousState => {\n          let newState = previousState;\n          newState.push(quesList[currentQuestion]);\n          return newState;\n        });\n      } else {\n        quesList[currentQuestion].ans = true;\n        quesList[currentQuestion].correct = false;\n        changeInCorrect(previousState => {\n          let newState = previousState;\n          newState.push(quesList[currentQuestion]);\n          return newState;\n        });\n      }\n\n      changeCurrentQuestion(previousState => {\n        let newState = previousState + 1;\n        return newState;\n      });\n    }\n  };\n\n  let data = useSelector(state => state.userInfo[props.currentPlayer - 1]);\n  let uname = data.uname;\n  let total = data.questions;\n  let [correct1, changeCorrect] = useState([]);\n  let [visited, changeVisited] = useState([]);\n  let [unAns, changeUnAns] = useState([]);\n  let [incorrect, changeInCorrect] = useState([]);\n  let quesList = data.questionsList;\n  let [currentQuestion, changeCurrentQuestion] = useState(0);\n  let oprOption = ['+', '-', '/', '*'];\n  let op1 = quesList[currentQuestion].op1;\n  let op2 = quesList[currentQuestion].op1;\n  let opr = oprOption[quesList[currentQuestion].opr - 1];\n  let result = returnOp(op1, op2, opr);\n  let ansInp = useRef();\n  let correctP = useRef();\n  let wrongP = useRef();\n  let finalQuestion = currentQuestion === total - 1 ? true : false;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"game-panel\"],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quesNo\",\n      className: styles.questionNo,\n      children: [\"Question Number : \", currentQuestion + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"question\",\n      className: styles.question,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.op,\n        id: \"op1\",\n        children: op1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"operand\",\n        className: styles.op,\n        children: opr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.op,\n        id: \"op2\",\n        children: op2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.op,\n        children: \"=\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: {\n          className: styles.opr,\n          id: 'op3',\n          ref: ansInp\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"correctAns\",\n      className: styles.correct,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.correctAns,\n        ref: correctP,\n        children: \"Correct Answer !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.wrongAns,\n        ref: wrongP,\n        children: [\"Wrong Answer, Correct Answer is \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"btn\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        data: {\n          id: 'checkAns',\n          className: styles.btn,\n          onClick: e => {\n            checkAns(ansInp.current.value, true);\n          }\n        },\n        children: \"Check Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), !finalQuestion && /*#__PURE__*/_jsxDEV(Button, {\n        data: {\n          id: 'nextQues',\n          className: styles.btn,\n          onClick: e => {\n            checkAns(ansInp.current.value, false);\n          }\n        },\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 30\n      }, this), finalQuestion && /*#__PURE__*/_jsxDEV(Button, {\n        data: {\n          id: 'finishQues',\n          className: styles.btn,\n          onClick: e => {\n            console.log('time to end');\n          }\n        },\n        children: \"Finish Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.uname,\n      children: uname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"status\",\n      className: styles.status,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questionLeft,\n        children: [\"Total : \", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.score,\n        children: [\"Correct: \", correct1.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.left,\n        children: [\"Left: \", total - visited.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PlayQuiz, \"K80lpvlxH7dsiiBLwCpNjcYtQYo=\", false, function () {\n  return [useSelector];\n});\n\n_c = PlayQuiz;\nexport default PlayQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayQuiz\");","map":{"version":3,"sources":["/Users/abhishek/Desktop/quiz-me/src/components/PlayQuiz/PlayQuiz.js"],"names":["styles","Button","useSelector","useRef","useState","Input","PlayQuiz","props","returnOp","a","b","opr","checkAns","data","flag","result","wrongP","current","style","display","correctP","ansInp","value","changeVisited","previousState","newState","push","quesList","currentQuestion","trim","length","ans","changeUnAns","correct","changeCorrect","changeInCorrect","changeCurrentQuestion","state","userInfo","currentPlayer","uname","total","questions","correct1","visited","unAns","incorrect","questionsList","oprOption","op1","op2","finalQuestion","questionNo","question","op","className","id","ref","correctAns","wrongAns","btn","onClick","e","console","log","status","questionLeft","score","left"],"mappings":"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","sourcesContent":["import styles from './PlayQuiz.module.css'\nimport Button from '../UI/Button/Button'\nimport {useSelector} from 'react-redux';\nimport { useRef, useState } from 'react';\nimport Input from '../UI/Input/Input';\n\nlet PlayQuiz = (props) =>{\n    let returnOp=(a,b,opr)=>{\n        switch(opr)\n        {\n            case '+' : \n            return (a+b);\n            break;\n            case '-' : \n            return (a-b);\n            break;\n            case '/' : \n            return (a/b);\n            break;\n            case '*' : \n            return (a*b);\n            break; \n            default :\n            return 'n.a'\n        }\n    }\n\n    let checkAns = (data,flag) => {\n        if(flag)\n        {\n            if(data==result)\n            {\n                wrongP.current.style.display = 'none';\n                correctP.current.style.display = 'initial';\n            }\n            else{\n                correctP.current.style.display = 'none';\n                wrongP.current.style.display = 'initial';\n            }\n            return;\n        }\n        else{\n            //update visited\n\n        ansInp.current.value = '';\n\n        changeVisited((previousState)=>{\n            let newState = previousState;\n            newState.push(quesList[currentQuestion]);\n            return newState;\n        })\n        if(data.trim().length==0)\n        {\n            //update not answered\n            quesList[currentQuestion].ans = false;\n            changeUnAns((previousState)=>{\n                let newState = previousState;\n                newState.push(quesList[currentQuestion]);\n                return newState;\n            })\n        }\n        if(data==result)\n        {\n            //update correct\n            quesList[currentQuestion].ans = true;\n            quesList[currentQuestion].correct = true;\n            changeCorrect((previousState)=>{\n                let newState = previousState;\n                newState.push(quesList[currentQuestion]);\n                return newState;}\n                )\n        }\n        else{ \n            quesList[currentQuestion].ans = true;\n            quesList[currentQuestion].correct = false;\n            changeInCorrect((previousState)=>{\n                let newState = previousState;\n                newState.push(quesList[currentQuestion]);\n                return newState;}\n                )\n        }\n        changeCurrentQuestion((previousState)=>{\n            let newState = previousState+1;\n            return newState;\n\n        });\n    }\n    }\n\n    let data = useSelector((state)=>state.userInfo[props.currentPlayer-1]);\n    let uname = data.uname;\n    let total = data.questions;\n    let [correct1,changeCorrect] = useState([]);\n    let [visited,changeVisited] = useState([]);\n    let [unAns,changeUnAns] = useState([]);\n    let [incorrect,changeInCorrect] = useState([]);\n    let quesList = data.questionsList;\n    let [currentQuestion,changeCurrentQuestion] = useState(0);\n    let oprOption = ['+','-','/','*'];\n    let op1 = quesList[currentQuestion].op1;\n    let op2 = quesList[currentQuestion].op1\n    let opr = oprOption[quesList[currentQuestion].opr-1];  \n    \n    let result = returnOp(op1,op2,opr);\n    let ansInp = useRef();\n    let correctP = useRef();\n    let wrongP = useRef();\n    let finalQuestion = (currentQuestion===total-1)?true:false;\n\n    return(\n        <div className={styles[\"game-panel\"]}>\n            <div id='quesNo' className={styles.questionNo}>Question Number : {currentQuestion+1}</div>\n            <div id='question' className={styles.question}>\n            <div className={styles.op} id='op1'>{op1}</div>\n            <div id='operand' className={styles.op}>{opr}</div>\n            <div className={styles.op} id='op2'>{op2}</div>\n            <div className={styles.op}>=</div>\n            <Input data={{className:styles.opr,id:'op3',ref:ansInp}}></Input>\n            </div>\n            <div id='correctAns' className={styles.correct}>\n            <p className={styles.correctAns} ref={correctP}>Correct Answer !</p>\n            <p className={styles.wrongAns} ref={wrongP}>Wrong Answer, Correct Answer is {result}</p>\n            </div>\n            <div id='btn'>\n            <Button data={{id:'checkAns',className:styles.btn,onClick:(e)=>{checkAns(ansInp.current.value,true)}}}>Check Answer</Button>\n            {!finalQuestion&&<Button data={{id:'nextQues',className:styles.btn,onClick:(e)=>{checkAns(ansInp.current.value,false)}}}>Next Question</Button>}\n            {finalQuestion&&<Button data={{id:'finishQues',className:styles.btn,onClick:(e)=>{console.log('time to end')}}}>Finish Quiz</Button>}\n            </div>\n            <div className={styles.uname}>{uname}</div>\n            <div id='status' className={styles.status}>\n            <div className={styles.questionLeft}>Total : {total}</div>\n            <div className={styles.score}>Correct: {correct1.length}</div>\n            <div className={styles.left}>Left: {total - visited.length}</div>\n            </div>\n        </div>\n    )    \n}\n\nexport default PlayQuiz;\n\n"]},"metadata":{},"sourceType":"module"}