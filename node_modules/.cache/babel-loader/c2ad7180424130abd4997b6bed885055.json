{"ast":null,"code":"import _slicedToArray from\"/Users/abhishek/Desktop/quiz-me/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import styles from'./EndQuiz.module.css';import{useSelector}from'react-redux';import{useState}from'react';import Button from'../UI/Button/Button';import QuestionSummary from'../QuestionSummary/QuestionSummary';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EndQuiz=function EndQuiz(props){var data=useSelector(function(state){return state.userInfo[props.currentPlayer-1];});var quesList=data.questionsList;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),questionNum=_useState2[0],changeQuesNo=_useState2[1];console.log(quesList);var userName=data.uname;var total=data.questions;var correctNo=quesList.reduce(function(count,item){if(item.correct){return+count+1;}else{return+count+0;}},0);var Unanswered=quesList.reduce(function(count,item){if(item.ans){return+count+0;}else{return+count+1;}},0);return/*#__PURE__*/_jsxs(\"div\",{className:styles[\"summary-board\"],children:[/*#__PURE__*/_jsx(\"div\",{className:styles.uname,children:userName}),/*#__PURE__*/_jsx(\"div\",{className:styles.summary,children:quesList.map(function(item,index){return/*#__PURE__*/_jsx(QuestionSummary,{questionNum:index+1,question:item},index);})}),/*#__PURE__*/_jsxs(\"div\",{id:\"status\",className:styles.status,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.info,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.questionLeft,children:[\"Total : \",total]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.score,children:[\"Correct: \",correctNo]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.score,children:[\"Not Answered: \",Unanswered]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.score,children:[\"Incorrect: \",total-(correctNo+Unanswered)]})]}),/*#__PURE__*/_jsx(Button,{data:{'type':'button','className':styles.btn,onClick:function onClick(){props.newQuiz(0);}},children:\"Quiz Again\"})]})]});};export default EndQuiz;","map":{"version":3,"sources":["/Users/abhishek/Desktop/quiz-me/src/components/EndQuiz/EndQuiz.js"],"names":["styles","useSelector","useState","Button","QuestionSummary","EndQuiz","props","data","state","userInfo","currentPlayer","quesList","questionsList","questionNum","changeQuesNo","console","log","userName","uname","total","questions","correctNo","reduce","count","item","correct","Unanswered","ans","summary","map","index","status","info","questionLeft","score","btn","onClick","newQuiz"],"mappings":"qHAAA,MAAOA,CAAAA,MAAP,KAAmB,sBAAnB,CACA,OAAQC,WAAR,KAA0B,aAA1B,CACA,OAAQC,QAAR,KAAuB,OAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,eAAP,KAA4B,oCAA5B,C,wFAEA,GAAIC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAU,CACpB,GAAIC,CAAAA,IAAI,CAAGN,WAAW,CAAC,SAACO,KAAD,QAASA,CAAAA,KAAK,CAACC,QAAN,CAAeH,KAAK,CAACI,aAAN,CAAoB,CAAnC,CAAT,EAAD,CAAtB,CACA,GAAIC,CAAAA,QAAQ,CAAGJ,IAAI,CAACK,aAApB,CACA,cAAiCV,QAAQ,CAAC,CAAD,CAAzC,wCAAKW,WAAL,eAAiBC,YAAjB,eACAC,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAGA,GAAIM,CAAAA,QAAQ,CAAGV,IAAI,CAACW,KAApB,CACA,GAAIC,CAAAA,KAAK,CAAGZ,IAAI,CAACa,SAAjB,CACA,GAAIC,CAAAA,SAAS,CAAGV,QAAQ,CAACW,MAAT,CAAgB,SAACC,KAAD,CAAOC,IAAP,CAAc,CAC1C,GAAGA,IAAI,CAACC,OAAR,CACA,CAEI,MAAO,CAACF,KAAD,CAAO,CAAd,CACH,CAJD,IAKI,CACA,MAAO,CAACA,KAAD,CAAO,CAAd,CACH,CACJ,CATe,CASd,CATc,CAAhB,CAUA,GAAIG,CAAAA,UAAU,CAAGf,QAAQ,CAACW,MAAT,CAAgB,SAACC,KAAD,CAAOC,IAAP,CAAc,CAC3C,GAAGA,IAAI,CAACG,GAAR,CACA,CAEI,MAAO,CAACJ,KAAD,CAAO,CAAd,CACH,CAJD,IAKI,CACA,MAAO,CAACA,KAAD,CAAO,CAAd,CACH,CACJ,CATgB,CASf,CATe,CAAjB,CAYA,mBACI,aAAK,SAAS,CAAEvB,MAAM,CAAC,eAAD,CAAtB,wBACA,YAAK,SAAS,CAAEA,MAAM,CAACkB,KAAvB,UAA+BD,QAA/B,EADA,cAEA,YAAK,SAAS,CAAEjB,MAAM,CAAC4B,OAAvB,UACCjB,QAAQ,CAACkB,GAAT,CAAa,SAACL,IAAD,CAAMM,KAAN,CAAc,CACxB,mBAAO,KAAC,eAAD,EAA6B,WAAW,CAAIA,KAAK,CAAC,CAAlD,CAAqD,QAAQ,CAAEN,IAA/D,EAAsBM,KAAtB,CAAP,CACH,CAFA,CADD,EAFA,cAOA,aAAK,EAAE,CAAC,QAAR,CAAiB,SAAS,CAAE9B,MAAM,CAAC+B,MAAnC,wBACA,aAAK,SAAS,CAAE/B,MAAM,CAACgC,IAAvB,wBACA,aAAK,SAAS,CAAEhC,MAAM,CAACiC,YAAvB,sBAA8Cd,KAA9C,GADA,cAEA,aAAK,SAAS,CAAEnB,MAAM,CAACkC,KAAvB,uBAAwCb,SAAxC,GAFA,cAGA,aAAK,SAAS,CAAErB,MAAM,CAACkC,KAAvB,4BAA6CR,UAA7C,GAHA,cAIA,aAAK,SAAS,CAAE1B,MAAM,CAACkC,KAAvB,yBAA0Cf,KAAK,EAAGE,SAAS,CAACK,UAAb,CAA/C,GAJA,GADA,cAOA,KAAC,MAAD,EAAQ,IAAI,CAAI,CAAC,OAAO,QAAR,CAAiB,YAAa1B,MAAM,CAACmC,GAArC,CAA0CC,OAAO,CAAE,kBAAI,CAAC9B,KAAK,CAAC+B,OAAN,CAAc,CAAd,EAAiB,CAAzE,CAAhB,wBAPA,GAPA,GADJ,CAmBH,CAlDD,CAoDA,cAAehC,CAAAA,OAAf","sourcesContent":["import styles from './EndQuiz.module.css'\nimport {useSelector} from 'react-redux'\nimport {useState} from 'react'\nimport Button from '../UI/Button/Button'\nimport QuestionSummary from '../QuestionSummary/QuestionSummary'\n\nlet EndQuiz = (props) =>{\n    let data = useSelector((state)=>state.userInfo[props.currentPlayer-1]);\n    let quesList = data.questionsList;\n    let [questionNum,changeQuesNo] = useState(0);\n    console.log(quesList);\n\n\n    let userName = data.uname;\n    let total = data.questions;\n    let correctNo = quesList.reduce((count,item)=>{\n        if(item.correct)\n        {\n            \n            return +count+1;\n        }\n        else{\n            return +count+0;\n        }\n    },0)\n    let Unanswered = quesList.reduce((count,item)=>{\n        if(item.ans)\n        {\n            \n            return +count+0;\n        }\n        else{\n            return +count+1;\n        }\n    },0)\n\n\n    return(\n        <div className={styles[\"summary-board\"]}>\n        <div className={styles.uname}>{userName}</div>\n        <div className={styles.summary}>\n        {quesList.map((item,index)=>{\n            return <QuestionSummary key={index} questionNum = {index+1} question={item}/>\n        })}\n        </div>\n        <div id='status' className={styles.status}>\n        <div className={styles.info}>\n        <div className={styles.questionLeft}>Total : {total}</div>\n        <div className={styles.score}>Correct: {correctNo}</div>\n        <div className={styles.score}>Not Answered: {Unanswered}</div>\n        <div className={styles.score}>Incorrect: {total- (correctNo+Unanswered)}</div>\n        </div>\n        <Button data = {{'type':'button','className': styles.btn, onClick: ()=>{props.newQuiz(0)}}}>Quiz Again</Button>\n        </div>\n        </div>  \n    )    \n}\n\nexport default EndQuiz;"]},"metadata":{},"sourceType":"module"}