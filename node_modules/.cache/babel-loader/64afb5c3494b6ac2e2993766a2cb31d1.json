{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek/Desktop/quiz-me/src/components/Questions/Questions.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect, useState, useRef } from 'react';\nimport styles from '../PlayQuiz/PlayQuiz.module.css';\nimport Button from '../UI/Button/Button';\nimport Input from '../UI/Input/Input';\nimport { useDispatch } from 'react-redux';\nimport UserActions from '../../store/userslice';\nimport React from 'react';\nimport Image from '../UI/Image/Image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet Question = props => {\n  _s();\n\n  let Question = props.Question;\n  console.log(\"these are the props\", props);\n  console.log(\"these are the Question\", Question);\n  let no = props.Qno;\n  let ans = 1;\n  let [ansInp, changeAnsInp] = useState('');\n  let isFinal = no == props.total - 1 ? true : false;\n  let [isCorrect, changeIsCorrect] = useState(false);\n  let [isIncorrect, changeIsIncorrect] = useState(false);\n  let [isAnswered, changeIsAnswered] = useState(false);\n  let dispatchFn = useDispatch();\n  let next = useRef();\n  let finish = useRef();\n  let inp = useRef();\n\n  let checkCorrect = function (id) {\n    let flag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (id == ans) {\n      changeIsAnswered(false);\n      changeIsCorrect(true);\n      changeIsIncorrect(false);\n    } else {\n      changeIsAnswered(false);\n      changeIsCorrect(false);\n      changeIsIncorrect(true);\n    }\n\n    if (flag) {\n      //when next Question is pressed;\n      changeAnsInp('');\n      dispatchFn(UserActions.changeAns({\n        id: no,\n        user: props.user,\n        isAns: isAnswered\n      }));\n      dispatchFn(UserActions.changeCorrect({\n        id: no,\n        user: props.user,\n        isCorrect: isCorrect\n      }));\n      props.nextQues();\n    }\n  };\n\n  let checkAnswer = flag => {\n    //checkAns\n    let data = ansInp;\n\n    if (data.trim().length == 0) {\n      changeIsAnswered(false);\n      changeIsCorrect(false);\n      changeIsIncorrect(true);\n    } else if (data == ans) {\n      changeIsAnswered(true);\n      changeIsIncorrect(false);\n      changeIsCorrect(true);\n    } else {\n      changeIsAnswered(true);\n      changeIsCorrect(false);\n      changeIsIncorrect(true);\n    }\n\n    if (flag) {\n      //when next Question is pressed;\n      changeAnsInp('');\n      dispatchFn(UserActions.changeAns({\n        id: no,\n        user: props.user,\n        isAns: isAnswered\n      }));\n      dispatchFn(UserActions.changeCorrect({\n        id: no,\n        user: props.user,\n        isCorrect: isCorrect\n      }));\n      props.nextQues();\n    }\n  };\n\n  useEffect(() => {\n    changeIsAnswered(false);\n    changeIsCorrect(false);\n    changeIsIncorrect(false);\n  }, [no]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quesNo\",\n      className: styles.questionNo,\n      children: [\"Question Number : \", no + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"question\",\n      className: styles.question,\n      children: Question.question.map((item, index) => /*#__PURE__*/_jsxDEV(Image, {\n        src: item.img,\n        onClick: checkCorrect(item.id)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 54\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"correctAns\",\n      className: styles.correct,\n      children: [isCorrect && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.correctAns,\n        children: \"Correct Answer !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 31\n      }, this), isIncorrect && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.wrongAns,\n        children: [\"Wrong Answer, Correct Answer is \", ans]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"btn-wrap\"],\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        data: {\n          id: 'checkAns',\n          className: styles.btn,\n          onClick: () => {\n            checkAnswer(false);\n          }\n        },\n        children: \"Submit Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), !isFinal && /*#__PURE__*/_jsxDEV(Button, {\n        data: {\n          id: 'nextQues',\n          className: styles.btn,\n          ref: next,\n          onClick: () => {\n            checkAnswer(true);\n          }\n        },\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 30\n      }, this), isFinal && /*#__PURE__*/_jsxDEV(Button, {\n        data: {\n          id: 'finishQues',\n          className: styles.btn,\n          ref: finish,\n          onClick: () => {\n            checkAnswer(true);\n          }\n        },\n        children: \"Finish Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Question, \"fb4rcpaQEx24l2xEF0w82uOmho4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/abhishek/Desktop/quiz-me/src/components/Questions/Questions.js"],"names":["Fragment","useEffect","useState","useRef","styles","Button","Input","useDispatch","UserActions","React","Image","Question","props","console","log","no","Qno","ans","ansInp","changeAnsInp","isFinal","total","isCorrect","changeIsCorrect","isIncorrect","changeIsIncorrect","isAnswered","changeIsAnswered","dispatchFn","next","finish","inp","checkCorrect","id","flag","changeAns","user","isAns","changeCorrect","nextQues","checkAnswer","data","trim","length","questionNo","question","map","item","index","img","correct","correctAns","wrongAns","className","btn","onClick","ref"],"mappings":"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","sourcesContent":["import { Fragment, useEffect, useState,useRef } from 'react'\nimport styles from '../PlayQuiz/PlayQuiz.module.css'\nimport Button from '../UI/Button/Button'\nimport Input from '../UI/Input/Input';\nimport {useDispatch} from 'react-redux';\nimport UserActions from '../../store/userslice'\nimport React from 'react';\nimport Image from '../UI/Image/Image';\n\n\nlet Question = (props) => {\n    let Question = props.Question;\n    console.log(\"these are the props\",props);\n    console.log(\"these are the Question\",Question);\n    \n\n    let no = props.Qno;\n    let ans = 1;\n    let [ansInp,changeAnsInp] = useState('');\n    let isFinal = (no==props.total-1)?true:false;\n    let [isCorrect,changeIsCorrect] = useState(false);\n    let [isIncorrect,changeIsIncorrect] = useState(false);\n    let [isAnswered,changeIsAnswered] = useState(false);\n    let dispatchFn = useDispatch();\n    let next = useRef();\n    let finish = useRef();\n    let inp = useRef();\n\n    let checkCorrect = (id,flag=false)=>{\n        if(id==ans)\n        {\n            changeIsAnswered(false);\n            changeIsCorrect(true);\n            changeIsIncorrect(false);\n        }\n        else\n        {\n            changeIsAnswered(false);\n            changeIsCorrect(false);\n            changeIsIncorrect(true);\n        }\n        if(flag){\n            //when next Question is pressed;\n            changeAnsInp('');\n            dispatchFn(UserActions.changeAns({id:no,user:props.user,isAns:isAnswered}));\n            dispatchFn(UserActions.changeCorrect({id:no,user:props.user,isCorrect:isCorrect}));\n            props.nextQues();\n        }\n    }\n    \n    let checkAnswer =(flag)=>{\n         //checkAns\n        let data = ansInp;\n        if(data.trim().length==0)\n            {\n                changeIsAnswered(false);\n                changeIsCorrect(false);\n                changeIsIncorrect(true);\n            }\n            else if(data==ans)\n            {   changeIsAnswered(true);\n                changeIsIncorrect(false);\n                changeIsCorrect(true);\n            }\n            else{\n                changeIsAnswered(true);\n                changeIsCorrect(false);\n                changeIsIncorrect(true);\n            }\n        if(flag){\n            //when next Question is pressed;\n            changeAnsInp('');\n            dispatchFn(UserActions.changeAns({id:no,user:props.user,isAns:isAnswered}));\n            dispatchFn(UserActions.changeCorrect({id:no,user:props.user,isCorrect:isCorrect}));\n            props.nextQues();\n        }\n    }\n    useEffect(()=>{\n        changeIsAnswered(false);\n        changeIsCorrect(false);\n        changeIsIncorrect(false);\n    },[no]);\n    return (\n        <Fragment>\n                <div id='quesNo' className={styles.questionNo}>Question Number : {no+1}</div>\n                <div id='question' className={styles.question}>\n                {Question.question.map((item,index)=><Image key={index} src={item.img} onClick={checkCorrect(item.id)}></Image>)}\n                </div>\n                <div id='correctAns' className={styles.correct}>\n                {isCorrect && <p className={styles.correctAns}>Correct Answer !</p>}\n                {isIncorrect && <p className={styles.wrongAns}>Wrong Answer, Correct Answer is {ans}</p>}\n                </div>\n                <div className={styles[\"btn-wrap\"]}>\n                <Button data={{id:'checkAns',className:styles.btn,onClick:()=>{checkAnswer(false)}}}>Submit Answer</Button>\n                {!isFinal && <Button data={{id:'nextQues',className:styles.btn,ref:next,onClick:()=>{checkAnswer(true)}}}>Next Question</Button>}\n                {isFinal && <Button data={{id:'finishQues',className:styles.btn,ref:finish,onClick:()=>{checkAnswer(true)}}}>Finish Quiz</Button>}\n                </div>\n        </Fragment>\n    )\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}