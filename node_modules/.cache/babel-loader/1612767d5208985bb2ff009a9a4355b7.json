{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek/Desktop/quiz-me/src/components/StartQuiz/StartQuiz.js\",\n    _s = $RefreshSig$();\n\nimport Button from '../UI/Button/Button';\nimport styles from './StartQuiz.module.css';\nimport Input from '../UI/Input/Input';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport UserActions from '../../store/userslice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet StartQuiz = props => {\n  _s();\n\n  let dispatchFn = useDispatch();\n  let id = useSelector(state => state.userInfo.length + 1);\n  let [uname, changeUname] = useState('');\n  let [ques, changeQues] = useState(10);\n\n  let ValidateMe = () => {\n    if (uname.length !== 0 && ques !== '') {\n      return true;\n    } else {\n      if (uname.length == 0) {\n        document.getElementById('user-name').classList.add('invalid');\n        document.getElementById('user-name').focus();\n      }\n\n      if (ques == '') {\n        document.getElementById('user-name').classList.add('invalid');\n        document.getElementById('user-name').focus();\n      }\n\n      return false;\n    }\n  };\n\n  let startGame = () => {\n    props.startQuiz(1);\n    let newUser = {\n      id: id,\n      uname: uname,\n      gameState: 1,\n      questions: ques\n    };\n    dispatchFn(UserActions.setData({\n      newUser\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"start-info\"],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.user} ${styles.feild}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user-name\",\n        children: \"User Name : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: {\n          type: 'text',\n          id: 'user-name',\n          name: 'user-name',\n          className: styles.inp,\n          value: uname,\n          onChange: e => {\n            changeUname(e.target.value);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.ques} ${styles.feild}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ques\",\n        children: \"No of Questions : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: {\n          type: 'number',\n          min: 1,\n          max: 20,\n          id: 'ques',\n          name: 'ques',\n          className: styles.inp,\n          value: ques,\n          onChange: e => {\n            changeQues(e.target.value);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      data: {\n        'type': 'button',\n        'className': styles.btn,\n        onClick: startGame\n      },\n      children: \"Start Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 13\n  }, this);\n};\n\n_s(StartQuiz, \"KmjK2qBz7o+mPfrQjyxi8rsx5HU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = StartQuiz;\nexport default StartQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartQuiz\");","map":{"version":3,"sources":["/Users/abhishek/Desktop/quiz-me/src/components/StartQuiz/StartQuiz.js"],"names":["Button","styles","Input","useDispatch","useSelector","useState","UserActions","StartQuiz","props","dispatchFn","id","state","userInfo","length","uname","changeUname","ques","changeQues","ValidateMe","document","getElementById","classList","add","focus","startGame","startQuiz","newUser","gameState","questions","setData","user","feild","type","name","className","inp","value","onChange","e","target","min","max","btn","onClick"],"mappings":"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","sourcesContent":["import Button from '../UI/Button/Button'\nimport styles from './StartQuiz.module.css'\nimport Input from '../UI/Input/Input'\nimport {useDispatch, useSelector} from 'react-redux';\nimport { useState } from 'react';\nimport UserActions from '../../store/userslice'\n\nlet StartQuiz = (props) =>{ \n    let dispatchFn = useDispatch();\n    let id = useSelector((state)=>state.userInfo.length+1);\n    let [uname,changeUname] = useState('');\n    let [ques,changeQues] = useState (10);\n\n    let ValidateMe = () => {\n        if(uname.length!==0 && ques!=='')\n        {\n            return true;\n        }\n        else{\n            if(uname.length==0)\n            {\n                document.getElementById('user-name').classList.add('invalid');\n                document.getElementById('user-name').focus();\n            }\n            if(ques=='')\n            {\n                document.getElementById('user-name').classList.add('invalid');\n                document.getElementById('user-name').focus();\n            }\n            return false;\n        }\n    }\n    let startGame = () => {\n        props.startQuiz(1);\n        let newUser = {\n            id : id,\n            uname : uname,\n            gameState : 1,\n            questions : ques,\n        }\n        dispatchFn(UserActions.setData({newUser}))\n    }\n    return(\n            <div className={styles[\"start-info\"]}>\n            <div className={`${styles.user} ${styles.feild}`}>\n            <label htmlFor='user-name'>User Name : </label>\n            <Input data={{type:'text',id:'user-name',name:'user-name',className:styles.inp,value:uname,onChange:(e)=>{changeUname(e.target.value)}}}></Input>\n            </div>\n            <div className={`${styles.ques} ${styles.feild}`}>\n            <label htmlFor='ques'>No of Questions : </label>\n            <Input data={{type:'number',min:1,max:20,id:'ques',name:'ques',className:styles.inp,value:ques,onChange:(e)=>{changeQues(e.target.value)}}}></Input>\n            </div>\n            <Button data = {{'type':'button','className': styles.btn, onClick: startGame}}>Start Quiz</Button>\n            </div>\n    )\n} \n\nexport default StartQuiz;"]},"metadata":{},"sourceType":"module"}