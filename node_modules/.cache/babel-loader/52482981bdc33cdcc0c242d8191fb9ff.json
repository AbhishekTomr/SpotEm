{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek/Desktop/quiz-me/src/components/StartQuiz/StartQuiz.js\",\n    _s = $RefreshSig$();\n\nimport Button from '../UI/Button/Button';\nimport styles from './StartQuiz.module.css';\nimport Input from '../UI/Input/Input';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport UserActions from '../../store/userslice';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet StartQuiz = props => {\n  _s();\n\n  let dispatchFn = useDispatch();\n  let id = useSelector(state => state.userInfo.length + 1);\n  let [uname, changeUname] = useState('');\n  let [ques, changeQues] = useState(10);\n  let quesList = [];\n\n  let ValidateMe = (element1, type) => {\n    if (type == 'text') {\n      changeUname(element1.value);\n\n      if (element1.value.trim().length == 0) {\n        element1.classList.add(styles.invalid);\n        return false;\n      } else {\n        element1.classList.remove(styles.invalid);\n        return true;\n      }\n    }\n\n    if (type == 'num') {\n      changeQues(element1.value);\n\n      if (element1.value == '') {\n        element1.classList.add(styles.invalid);\n        return false;\n      } else {\n        element1.classList.remove(styles.invalid);\n        return true;\n      }\n    }\n  };\n\n  let startGame = () => {\n    let inpName = document.getElementById('user-name');\n    let inpQues = document.getElementById('ques');\n\n    if (!ValidateMe(inpName, 'text')) {\n      inpName.focus();\n    } else if (!ValidateMe(inpQues, 'num')) {\n      inpQues.focus();\n    } else {\n      props.startQuiz(1);\n\n      for (let i = 0; i < ques; i++) {\n        let q = {\n          op1: Math.floor(Math.random() * 10 + 1),\n          op2: Math.floor(Math.random() * 10 + 1),\n          opr: Math.floor(Math.random() * 4 + 1),\n          ans: false,\n          correct: false\n        };\n        quesList.push(q);\n      }\n\n      let newUser = {\n        id: id,\n        uname: uname,\n        gameState: 1,\n        questions: ques,\n        questionsList: quesList\n      };\n      props.player(id);\n      dispatchFn(UserActions.setData({\n        newUser\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"start-info\"],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.user} ${styles.feild}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user-name\",\n        children: \"User Name : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: {\n          type: 'text',\n          id: 'user-name',\n          name: 'user-name',\n          className: styles.inp,\n          value: uname,\n          onBlur: e => {\n            ValidateMe(e.target, 'text');\n          },\n          onChange: e => {\n            ValidateMe(e.target, 'text');\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.ques} ${styles.feild}`,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No of Questions : 10 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      data: {\n        'type': 'button',\n        'className': styles.btn,\n        onClick: startGame\n      },\n      children: \"Start Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 13\n  }, this);\n};\n\n_s(StartQuiz, \"KmjK2qBz7o+mPfrQjyxi8rsx5HU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = StartQuiz;\nexport default StartQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartQuiz\");","map":{"version":3,"sources":["/Users/abhishek/Desktop/quiz-me/src/components/StartQuiz/StartQuiz.js"],"names":["Button","styles","Input","useDispatch","useSelector","useState","UserActions","React","StartQuiz","props","dispatchFn","id","state","userInfo","length","uname","changeUname","ques","changeQues","quesList","ValidateMe","element1","type","value","trim","classList","add","invalid","remove","startGame","inpName","document","getElementById","inpQues","focus","startQuiz","i","q","op1","Math","floor","random","op2","opr","ans","correct","push","newUser","gameState","questions","questionsList","player","setData","user","feild","name","className","inp","onBlur","e","target","onChange","btn","onClick"],"mappings":"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","sourcesContent":["import Button from '../UI/Button/Button'\nimport styles from './StartQuiz.module.css'\nimport Input from '../UI/Input/Input'\nimport {useDispatch, useSelector} from 'react-redux';\nimport { useState } from 'react';\nimport UserActions from '../../store/userslice'\nimport React from 'react';\n\nlet StartQuiz = (props) =>{ \n    let dispatchFn = useDispatch();\n    let id = useSelector((state)=>state.userInfo.length+1);\n    let [uname,changeUname] = useState('');\n    let [ques,changeQues] = useState (10);\n    let quesList = [];\n\n    let ValidateMe = (element1,type) => {\n        if(type=='text')\n        {\n            changeUname(element1.value);\n            if(element1.value.trim().length==0)\n            {\n                element1.classList.add(styles.invalid);\n                return false;\n            }\n            else{\n                element1.classList.remove(styles.invalid);\n                return true;\n            }\n        }\n        if(type=='num'){\n        changeQues(element1.value);\n        if(element1.value=='')\n        {\n            element1.classList.add(styles.invalid);\n            return false;\n        }\n        else{\n            element1.classList.remove(styles.invalid);\n            return true;\n            \n        }\n        }\n    }\n\n   \n\n    let startGame = () => {\n        let inpName = document.getElementById('user-name');\n        let inpQues = document.getElementById('ques');\n        if(!ValidateMe(inpName,'text'))\n        {\n            inpName.focus();\n        }\n        else if(!ValidateMe(inpQues,'num'))\n        {\n            inpQues.focus();\n        }\n        else{\n            props.startQuiz(1);\n            for(let i = 0;i<ques;i++)\n            {\n                let q = {\n                    op1 : Math.floor((Math.random()*10)+1),\n                    op2 : Math.floor((Math.random()*10)+1),\n                    opr : Math.floor((Math.random()*4)+1),\n                    ans : false,\n                    correct : false\n                }\n                quesList.push(q);\n            }\n            let newUser = {\n            id : id,\n            uname : uname,\n            gameState : 1,\n            questions : ques,\n            questionsList : quesList\n        }\n        props.player(id);\n        dispatchFn(UserActions.setData({newUser}))\n        }\n    }\n    return(\n            <div className={styles[\"start-info\"]}>\n            <div className={`${styles.user} ${styles.feild}`}>\n            <label htmlFor='user-name'>User Name : </label>\n            <Input data={{type:'text',id:'user-name',name:'user-name',className:styles.inp,value:uname,onBlur:(e)=>{ValidateMe(e.target,'text')},onChange:(e)=>{ValidateMe(e.target,'text')}}}></Input>\n            </div>\n            <div className={`${styles.ques} ${styles.feild}`}>\n            <p>No of Questions : 10 </p>\n            </div>\n            <Button data = {{'type':'button','className': styles.btn, onClick: startGame}}>Start Quiz</Button>\n            </div>\n    )\n} \n\nexport default StartQuiz;"]},"metadata":{},"sourceType":"module"}