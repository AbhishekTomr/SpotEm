{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek/Desktop/quiz-me/src/components/StartQuiz/StartQuiz.js\",\n    _s = $RefreshSig$();\n\nimport Button from '../UI/Button/Button';\nimport styles from './StartQuiz.module.css';\nimport Input from '../UI/Input/Input';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport UserActions from '../../store/userslice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet StartQuiz = props => {\n  _s();\n\n  let dispatchFn = useDispatch();\n  let id = useSelector(state => state.user.length + 1);\n  let [uname, changeUname] = useState('');\n  let [ques, changeQues] = useState(10);\n\n  let startGame = () => {\n    props.startQuiz(1);\n    let newUser = {\n      id: id,\n      name: uname,\n      gameState: props.gameState,\n      questions: ques\n    };\n    dispatchFn(UserActions.setData({\n      payload: newUser\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"start-info\"],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.user} ${styles.feild}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user-name\",\n        children: \"User Name : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: {\n          type: 'text',\n          id: 'user-name',\n          name: 'user-name',\n          className: styles.inp,\n          value: uname,\n          onChange: e => {\n            changeUname(e.target.value);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.ques} ${styles.feild}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ques\",\n        children: \"No of Questions : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: {\n          type: 'number',\n          id: 'ques',\n          name: 'ques',\n          className: styles.inp,\n          value: ques,\n          onChange: e => {\n            changeQues(e.target.value);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      data: {\n        'type': 'button',\n        'className': styles.btn,\n        onClick: startGame\n      },\n      children: \"Start Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 13\n  }, this);\n};\n\n_s(StartQuiz, \"KmjK2qBz7o+mPfrQjyxi8rsx5HU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = StartQuiz;\nexport default StartQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartQuiz\");","map":{"version":3,"sources":["/Users/abhishek/Desktop/quiz-me/src/components/StartQuiz/StartQuiz.js"],"names":["Button","styles","Input","useDispatch","useSelector","useState","UserActions","StartQuiz","props","dispatchFn","id","state","user","length","uname","changeUname","ques","changeQues","startGame","startQuiz","newUser","name","gameState","questions","setData","payload","feild","type","className","inp","value","onChange","e","target","btn","onClick"],"mappings":"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","sourcesContent":["import Button from '../UI/Button/Button'\nimport styles from './StartQuiz.module.css'\nimport Input from '../UI/Input/Input'\nimport {useDispatch, useSelector} from 'react-redux';\nimport { useState } from 'react';\nimport UserActions from '../../store/userslice'\n\nlet StartQuiz = (props) =>{ \n    let dispatchFn = useDispatch();\n    let id = useSelector((state)=>state.user.length+1);\n    let [uname,changeUname] = useState('');\n    let [ques,changeQues] = useState (10);\n    let startGame = () => {\n        props.startQuiz(1);\n        let newUser = {\n            id : id,\n            name : uname,\n            gameState : props.gameState,\n            questions : ques,\n        }\n        dispatchFn(UserActions.setData({payload:newUser}))\n    }\n    return(\n            <div className={styles[\"start-info\"]}>\n            <div className={`${styles.user} ${styles.feild}`}>\n            <label htmlFor='user-name'>User Name : </label>\n            <Input data={{type:'text',id:'user-name',name:'user-name',className:styles.inp,value:uname,onChange:(e)=>{changeUname(e.target.value)}}}></Input>\n            </div>\n            <div className={`${styles.ques} ${styles.feild}`}>\n            <label htmlFor='ques'>No of Questions : </label>\n            <Input data={{type:'number',id:'ques',name:'ques',className:styles.inp,value:ques,onChange:(e)=>{changeQues(e.target.value)}}}></Input>\n            </div>\n            <Button data = {{'type':'button','className': styles.btn, onClick: startGame}}>Start Quiz</Button>\n            </div>\n    )\n} \n\nexport default StartQuiz;"]},"metadata":{},"sourceType":"module"}