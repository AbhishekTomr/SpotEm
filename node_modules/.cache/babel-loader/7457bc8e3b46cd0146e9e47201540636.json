{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek/Desktop/quiz-me/src/components/Questions/Questions.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from 'react';\nimport styles from '../PlayQuiz/PlayQuiz.module.css';\nimport Button from '../UI/Button/Button';\nimport Input from '../UI/Input/Input';\nimport { useDispatch } from 'react-redux';\nimport UserActions from '../../store/userslice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet returnOp = (a, b, opr) => {\n  switch (opr) {\n    case '+':\n      return a + b;\n\n    case '-':\n      return a - b;\n\n    case '/':\n      return a / b;\n\n    case '*':\n      return a * b;\n\n    default:\n      return 'n.a';\n  }\n};\n\nlet Question = props => {\n  _s();\n\n  let no = props.Qno;\n  let op1 = props.Question.op1;\n  let op2 = props.Question.op2;\n  let oprOption = ['+', '-', '/', 'x'];\n  let opr = oprOption[props.Question.opr - 1];\n  let ans = returnOp(op1, op2, opr);\n  let [ansInp, changeAnsInp] = useState('');\n  let isFinal = no == props.total;\n  let [isCorrect, changeCorrect] = useState(false);\n  let [isIncorrect, changeInCorrect] = useState(false);\n  let [isAnswered, changeIsAnswered] = useState(false);\n  let dispatchFn = useDispatch();\n\n  let checkAnswer = flag => {\n    //checkAns\n    let data = ansInp;\n\n    if (data.trim().length == 0) {\n      changeIsAnswered(false);\n      changeIsCorrect(false);\n      changeIsIncorrect(true);\n    } else if (data === ans) {\n      changeIsAnswered(true);\n      changeIsIncorrect(false);\n      isCorrect = true;\n    } else {\n      isAnswered = true;\n      isCorrect = false;\n      isIncorrect = true;\n    }\n\n    if (flag) {\n      //when next Question is pressed;\n      changeAnsInp('');\n      dispatchFn(UserActions.changeAns({\n        id: no,\n        isAns: isAnswered\n      }));\n      dispatchFn(UserActions.changeCorrect({\n        id: no,\n        isCorrect: isCorrect\n      }));\n      props.nextQues();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quesNo\",\n      className: styles.questionNo,\n      children: [\"Question Number : \", no + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"question\",\n      className: styles.question,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.op,\n        id: \"op1\",\n        children: op1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"operand\",\n        className: styles.op,\n        children: opr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.op,\n        id: \"op2\",\n        children: op2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.op,\n        children: \"=\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: {\n          className: styles.opr,\n          id: 'op3',\n          value: ansInp,\n          onChange: e => {\n            changeAnsInp(e.target.value);\n          },\n          disabled: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"correctAns\",\n      className: styles.correct,\n      children: [isCorrect && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.correctAns,\n        children: \"Correct Answer !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 31\n      }, this), isIncorrect && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.wrongAns,\n        children: [\"Wrong Answer, Correct Answer is \", ans]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"btn\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        data: {\n          id: 'checkAns',\n          className: styles.btn,\n          onClick: () => {\n            checkAnswer(false);\n          }\n        },\n        children: \"Check Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        data: {\n          id: 'nextQues',\n          className: styles.btn,\n          onClick: () => {\n            checkAnswer(true);\n          }\n        },\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), isFinal && /*#__PURE__*/_jsxDEV(Button, {\n        data: {\n          id: 'finishQues',\n          className: styles.btn,\n          onClick: () => {\n            checkAnswer(true);\n          }\n        },\n        children: \"Finish Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Question, \"aBigkiJVquJqnsJ/Bn7Kx8zSaTM=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/abhishek/Desktop/quiz-me/src/components/Questions/Questions.js"],"names":["Fragment","useState","styles","Button","Input","useDispatch","UserActions","returnOp","a","b","opr","Question","props","no","Qno","op1","op2","oprOption","ans","ansInp","changeAnsInp","isFinal","total","isCorrect","changeCorrect","isIncorrect","changeInCorrect","isAnswered","changeIsAnswered","dispatchFn","checkAnswer","flag","data","trim","length","changeIsCorrect","changeIsIncorrect","changeAns","id","isAns","nextQues","questionNo","question","op","className","value","onChange","e","target","disabled","correct","correctAns","wrongAns","btn","onClick"],"mappings":"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","sourcesContent":["import { Fragment, useState } from 'react'\nimport styles from '../PlayQuiz/PlayQuiz.module.css'\nimport Button from '../UI/Button/Button'\nimport Input from '../UI/Input/Input';\nimport {useDispatch} from 'react-redux';\nimport UserActions from '../../store/userslice'\n\nlet returnOp=(a,b,opr)=>{\n    switch(opr)\n    {\n        case '+' : \n        return (a+b);\n        \n        case '-' : \n        return (a-b);\n        \n        case '/' : \n        return (a/b);\n        \n        case '*' : \n        return (a*b);\n        \n        default :\n        return 'n.a'\n    }\n}\n\nlet Question = (props) => {\n\n    let no = props.Qno;\n    let op1 = props.Question.op1;\n    let op2 = props.Question.op2;\n    let oprOption = ['+','-','/','x'];\n    let opr = oprOption[props.Question.opr-1];\n    let ans = returnOp(op1,op2,opr);\n    let [ansInp,changeAnsInp] = useState('');\n    let isFinal = no==props.total;\n    let [isCorrect,changeCorrect] = useState(false);\n    let [isIncorrect,changeInCorrect] = useState(false);\n    let [isAnswered,changeIsAnswered] = useState(false);\n    let dispatchFn = useDispatch();\n    \n    let checkAnswer =(flag)=>{\n         //checkAns\n        let data = ansInp;\n        if(data.trim().length==0)\n            {\n                changeIsAnswered(false);\n                changeIsCorrect(false);\n                changeIsIncorrect(true);\n            }\n            else if(data===ans)\n            {   changeIsAnswered(true);\n                changeIsIncorrect(false);\n                isCorrect = true;\n            }\n            else{\n                isAnswered = true;\n                isCorrect = false;\n                isIncorrect = true;\n            }\n        if(flag){\n            //when next Question is pressed;\n            changeAnsInp('');\n            dispatchFn(UserActions.changeAns({id:no,isAns:isAnswered}));\n            dispatchFn(UserActions.changeCorrect({id:no,isCorrect:isCorrect}));\n            props.nextQues();\n        }\n    }\n    return (\n        <Fragment>\n                <div id='quesNo' className={styles.questionNo}>Question Number : {no+1}</div>\n                <div id='question' className={styles.question}>\n                <div className={styles.op} id='op1'>{op1}</div>\n                <div id='operand' className={styles.op}>{opr}</div>\n                <div className={styles.op} id='op2'>{op2}</div>\n                <div className={styles.op}>=</div>\n                <Input data={{className:styles.opr,id:'op3',value:ansInp,onChange:(e)=>{changeAnsInp(e.target.value)},disabled:false}}></Input>\n                </div>\n                <div id='correctAns' className={styles.correct}>\n                {isCorrect && <p className={styles.correctAns}>Correct Answer !</p>}\n                {isIncorrect && <p className={styles.wrongAns}>Wrong Answer, Correct Answer is {ans}</p>}\n                </div>\n                <div id='btn'>\n                <Button data={{id:'checkAns',className:styles.btn,onClick:()=>{checkAnswer(false)}}}>Check Answer</Button>\n                <Button data={{id:'nextQues',className:styles.btn,onClick:()=>{checkAnswer(true)}}}>Next Question</Button>\n                {isFinal && <Button data={{id:'finishQues',className:styles.btn,onClick:()=>{checkAnswer(true)}}}>Finish Quiz</Button>}\n                </div>\n        </Fragment>\n    )\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}