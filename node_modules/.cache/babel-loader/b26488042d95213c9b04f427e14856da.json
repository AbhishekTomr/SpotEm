{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek/Desktop/quiz-me/src/components/PlayQuiz/PlayQuiz.js\",\n    _s = $RefreshSig$();\n\nimport styles from './PlayQuiz.module.css';\nimport Button from '../UI/Button/Button';\nimport { useSelector } from 'react-redux';\nimport { useRef, useState } from 'react';\nimport Input from '../UI/Input/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet PlayQuiz = props => {\n  _s();\n\n  let returnOp = (a, b, opr) => {\n    switch (opr) {\n      case '+':\n        return a + b;\n        break;\n\n      case '-':\n        return a - b;\n        break;\n\n      case '/':\n        return a / b;\n        break;\n\n      case '*':\n        return a * b;\n        break;\n\n      default:\n        return 'n.a';\n    }\n  };\n\n  let checkAns = (data, flag) => {\n    if (flag) {\n      if (data == result) {\n        correctP.current.style.display = 'initial';\n      } else {\n        wrongP.current.style.display = 'initial';\n      }\n\n      return;\n    } else {\n      //update visited\n      changeVisited(previousState => {\n        let newState = previousState;\n        newState.push(quesList[currentQuestion]);\n        return newState;\n      });\n\n      if (data.trim() == '') {\n        //update not answered\n        changeUnAns(previousState => {\n          let newState = previousState;\n          newState.push(quesList[currentQuestion]);\n          return newState;\n        });\n      }\n\n      if (data == result) {\n        //update correct\n        changeCorrect(previousState => {\n          let newState = previousState;\n          newState.push(quesList[currentQuestion]);\n          return newState;\n        });\n      } else {\n        changeInCorrect(previousState => {\n          let newState = previousState;\n          newState.push(quesList[currentQuestion]);\n          return newState;\n        });\n      }\n\n      changeCurrentQuestion(previousState => previousState++);\n    }\n  };\n\n  let data = useSelector(state => state.userInfo[props.currentPlayer - 1]);\n  let uname = data.uname;\n  let total = data.questions;\n  let [correct1, changeCorrect] = useState([]);\n  let [visited, changeVisited] = useState([]);\n  let [unAns, changeUnAns] = useState([]);\n  let [incorrect, changeInCorrect] = useState([]);\n  let quesList = data.questionsList;\n  let [currentQuestion, changeCurrentQuestion] = useState(0);\n  let oprOption = ['+', '-', '/', '*'];\n  let op1 = quesList[currentQuestion].op1;\n  let op2 = quesList[currentQuestion].op1;\n  let opr = oprOption[quesList[currentQuestion].opr - 1];\n  console.log(opr);\n  let result = returnOp(op1, op2, opr);\n  let ansInp = useRef();\n  let correctP = useRef();\n  let wrongP = useRef();\n  let finalQuestion = currentQuestion === total - 1 ? true : false;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"game-panel\"],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quesNo\",\n      className: styles.questionNo,\n      children: [\"Question Number : \", currentQuestion + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"question\",\n      className: styles.question,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.op,\n        id: \"op1\",\n        children: op1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"operand\",\n        className: styles.op,\n        children: opr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.op,\n        id: \"op2\",\n        children: op2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.op,\n        children: \"=\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: {\n          className: styles.opr,\n          id: 'op3',\n          ref: ansInp\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"correctAns\",\n      className: styles.correct,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.correctAns,\n        ref: correctP,\n        children: \"Correct Answer !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.wrongAns,\n        ref: wrongP,\n        children: [\"Wrong Answer, Correct Answer is \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"btn\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        data: {\n          id: 'checkAns',\n          className: styles.btn,\n          onClick: e => {\n            checkAns(ansInp.current.value, true);\n          }\n        },\n        children: \"Check Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), !finalQuestion && /*#__PURE__*/_jsxDEV(Button, {\n        data: {\n          id: 'nextQues',\n          className: styles.btn,\n          onClick: e => {\n            checkAns(ansInp.current.value, false);\n          }\n        },\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 30\n      }, this), finalQuestion && /*#__PURE__*/_jsxDEV(Button, {\n        data: {\n          id: 'finishQues',\n          className: styles.btn,\n          onClick: e => {\n            console.log('time to end');\n          }\n        },\n        children: \"Finish Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.uname,\n      children: uname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"status\",\n      className: styles.status,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questionLeft,\n        children: [\"Total : \", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.score,\n        children: [\"Correct: \", correct1.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.left,\n        children: [\"Left: \", total - visited.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PlayQuiz, \"K80lpvlxH7dsiiBLwCpNjcYtQYo=\", false, function () {\n  return [useSelector];\n});\n\n_c = PlayQuiz;\nexport default PlayQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayQuiz\");","map":{"version":3,"sources":["/Users/abhishek/Desktop/quiz-me/src/components/PlayQuiz/PlayQuiz.js"],"names":["styles","Button","useSelector","useRef","useState","Input","PlayQuiz","props","returnOp","a","b","opr","checkAns","data","flag","result","correctP","current","style","display","wrongP","changeVisited","previousState","newState","push","quesList","currentQuestion","trim","changeUnAns","changeCorrect","changeInCorrect","changeCurrentQuestion","state","userInfo","currentPlayer","uname","total","questions","correct1","visited","unAns","incorrect","questionsList","oprOption","op1","op2","console","log","ansInp","finalQuestion","questionNo","question","op","className","id","ref","correct","correctAns","wrongAns","btn","onClick","e","value","status","questionLeft","score","length","left"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;;AAEA,IAAIC,QAAQ,GAAIC,KAAD,IAAU;AAAA;;AAGrB,MAAIC,QAAQ,GAAC,CAACC,CAAD,EAAGC,CAAH,EAAKC,GAAL,KAAW;AACpB,YAAOA,GAAP;AAEI,WAAK,GAAL;AACA,eAAQF,CAAC,GAACC,CAAV;AACA;;AACA,WAAK,GAAL;AACA,eAAQD,CAAC,GAACC,CAAV;AACA;;AACA,WAAK,GAAL;AACA,eAAQD,CAAC,GAACC,CAAV;AACA;;AACA,WAAK,GAAL;AACA,eAAQD,CAAC,GAACC,CAAV;AACA;;AACA;AACA,eAAO,KAAP;AAfJ;AAiBH,GAlBD;;AAoBA,MAAIE,QAAQ,GAAG,CAACC,IAAD,EAAMC,IAAN,KAAe;AAC1B,QAAGA,IAAH,EACA;AACI,UAAGD,IAAI,IAAEE,MAAT,EACA;AACIC,QAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB,CAAuBC,OAAvB,GAAiC,SAAjC;AACH,OAHD,MAII;AACAC,QAAAA,MAAM,CAACH,OAAP,CAAeC,KAAf,CAAqBC,OAArB,GAA+B,SAA/B;AACH;;AACD;AACH,KAVD,MAWI;AACA;AACJE,MAAAA,aAAa,CAAEC,aAAD,IAAiB;AAC3B,YAAIC,QAAQ,GAAGD,aAAf;AACAC,QAAAA,QAAQ,CAACC,IAAT,CAAcC,QAAQ,CAACC,eAAD,CAAtB;AACA,eAAOH,QAAP;AACH,OAJY,CAAb;;AAKA,UAAGV,IAAI,CAACc,IAAL,MAAa,EAAhB,EACA;AACI;AACAC,QAAAA,WAAW,CAAEN,aAAD,IAAiB;AACzB,cAAIC,QAAQ,GAAGD,aAAf;AACAC,UAAAA,QAAQ,CAACC,IAAT,CAAcC,QAAQ,CAACC,eAAD,CAAtB;AACA,iBAAOH,QAAP;AACH,SAJU,CAAX;AAKH;;AACD,UAAGV,IAAI,IAAEE,MAAT,EACA;AACI;AACAc,QAAAA,aAAa,CAAEP,aAAD,IAAiB;AAC3B,cAAIC,QAAQ,GAAGD,aAAf;AACAC,UAAAA,QAAQ,CAACC,IAAT,CAAcC,QAAQ,CAACC,eAAD,CAAtB;AACA,iBAAOH,QAAP;AAAiB,SAHR,CAAb;AAKH,OARD,MASI;AACAO,QAAAA,eAAe,CAAER,aAAD,IAAiB;AAC7B,cAAIC,QAAQ,GAAGD,aAAf;AACAC,UAAAA,QAAQ,CAACC,IAAT,CAAcC,QAAQ,CAACC,eAAD,CAAtB;AACA,iBAAOH,QAAP;AAAiB,SAHN,CAAf;AAKH;;AACDQ,MAAAA,qBAAqB,CAAET,aAAD,IAAiBA,aAAa,EAA/B,CAArB;AACH;AACA,GA9CD;;AAiDA,MAAIT,IAAI,GAAGX,WAAW,CAAE8B,KAAD,IAASA,KAAK,CAACC,QAAN,CAAe1B,KAAK,CAAC2B,aAAN,GAAoB,CAAnC,CAAV,CAAtB;AACA,MAAIC,KAAK,GAAGtB,IAAI,CAACsB,KAAjB;AACA,MAAIC,KAAK,GAAGvB,IAAI,CAACwB,SAAjB;AACA,MAAI,CAACC,QAAD,EAAUT,aAAV,IAA2BzB,QAAQ,CAAC,EAAD,CAAvC;AACA,MAAI,CAACmC,OAAD,EAASlB,aAAT,IAA0BjB,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAI,CAACoC,KAAD,EAAOZ,WAAP,IAAsBxB,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAI,CAACqC,SAAD,EAAWX,eAAX,IAA8B1B,QAAQ,CAAC,EAAD,CAA1C;AACA,MAAIqB,QAAQ,GAAGZ,IAAI,CAAC6B,aAApB;AACA,MAAI,CAAChB,eAAD,EAAiBK,qBAAjB,IAA0C3B,QAAQ,CAAC,CAAD,CAAtD;AACA,MAAIuC,SAAS,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CAAhB;AACA,MAAIC,GAAG,GAAGnB,QAAQ,CAACC,eAAD,CAAR,CAA0BkB,GAApC;AACA,MAAIC,GAAG,GAAGpB,QAAQ,CAACC,eAAD,CAAR,CAA0BkB,GAApC;AACA,MAAIjC,GAAG,GAAGgC,SAAS,CAAClB,QAAQ,CAACC,eAAD,CAAR,CAA0Bf,GAA1B,GAA8B,CAA/B,CAAnB;AACAmC,EAAAA,OAAO,CAACC,GAAR,CAAYpC,GAAZ;AACA,MAAII,MAAM,GAAGP,QAAQ,CAACoC,GAAD,EAAKC,GAAL,EAASlC,GAAT,CAArB;AACA,MAAIqC,MAAM,GAAG7C,MAAM,EAAnB;AACA,MAAIa,QAAQ,GAAGb,MAAM,EAArB;AACA,MAAIiB,MAAM,GAAGjB,MAAM,EAAnB;AACA,MAAI8C,aAAa,GAAIvB,eAAe,KAAGU,KAAK,GAAC,CAAzB,GAA4B,IAA5B,GAAiC,KAArD;AACA,sBACI;AAAK,IAAA,SAAS,EAAEpC,MAAM,CAAC,YAAD,CAAtB;AAAA,4BACI;AAAK,MAAA,EAAE,EAAC,QAAR;AAAiB,MAAA,SAAS,EAAEA,MAAM,CAACkD,UAAnC;AAAA,uCAAkExB,eAAe,GAAC,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,EAAE,EAAC,UAAR;AAAmB,MAAA,SAAS,EAAE1B,MAAM,CAACmD,QAArC;AAAA,8BACA;AAAK,QAAA,SAAS,EAAEnD,MAAM,CAACoD,EAAvB;AAA2B,QAAA,EAAE,EAAC,KAA9B;AAAA,kBAAqCR;AAArC;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,EAAE,EAAC,SAAR;AAAkB,QAAA,SAAS,EAAE5C,MAAM,CAACoD,EAApC;AAAA,kBAAyCzC;AAAzC;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAK,QAAA,SAAS,EAAEX,MAAM,CAACoD,EAAvB;AAA2B,QAAA,EAAE,EAAC,KAA9B;AAAA,kBAAqCP;AAArC;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA;AAAK,QAAA,SAAS,EAAE7C,MAAM,CAACoD,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,eAKA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE;AAACC,UAAAA,SAAS,EAACrD,MAAM,CAACW,GAAlB;AAAsB2C,UAAAA,EAAE,EAAC,KAAzB;AAA+BC,UAAAA,GAAG,EAACP;AAAnC;AAAb;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI;AAAK,MAAA,EAAE,EAAC,YAAR;AAAqB,MAAA,SAAS,EAAEhD,MAAM,CAACwD,OAAvC;AAAA,8BACA;AAAG,QAAA,SAAS,EAAExD,MAAM,CAACyD,UAArB;AAAiC,QAAA,GAAG,EAAEzC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAG,QAAA,SAAS,EAAEhB,MAAM,CAAC0D,QAArB;AAA+B,QAAA,GAAG,EAAEtC,MAApC;AAAA,uDAA6EL,MAA7E;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAaI;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA,8BACA,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE;AAACuC,UAAAA,EAAE,EAAC,UAAJ;AAAeD,UAAAA,SAAS,EAACrD,MAAM,CAAC2D,GAAhC;AAAoCC,UAAAA,OAAO,EAAEC,CAAD,IAAK;AAACjD,YAAAA,QAAQ,CAACoC,MAAM,CAAC/B,OAAP,CAAe6C,KAAhB,EAAsB,IAAtB,CAAR;AAAoC;AAAtF,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEC,CAACb,aAAD,iBAAgB,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE;AAACK,UAAAA,EAAE,EAAC,UAAJ;AAAeD,UAAAA,SAAS,EAACrD,MAAM,CAAC2D,GAAhC;AAAoCC,UAAAA,OAAO,EAAEC,CAAD,IAAK;AAACjD,YAAAA,QAAQ,CAACoC,MAAM,CAAC/B,OAAP,CAAe6C,KAAhB,EAAsB,KAAtB,CAAR;AAAqC;AAAvF,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFjB,EAGCb,aAAa,iBAAE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE;AAACK,UAAAA,EAAE,EAAC,YAAJ;AAAiBD,UAAAA,SAAS,EAACrD,MAAM,CAAC2D,GAAlC;AAAsCC,UAAAA,OAAO,EAAEC,CAAD,IAAK;AAACf,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAA2B;AAA/E,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,eAkBI;AAAK,MAAA,SAAS,EAAE/C,MAAM,CAACmC,KAAvB;AAAA,gBAA+BA;AAA/B;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAmBI;AAAK,MAAA,EAAE,EAAC,QAAR;AAAiB,MAAA,SAAS,EAAEnC,MAAM,CAAC+D,MAAnC;AAAA,8BACA;AAAK,QAAA,SAAS,EAAE/D,MAAM,CAACgE,YAAvB;AAAA,+BAA8C5B,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,SAAS,EAAEpC,MAAM,CAACiE,KAAvB;AAAA,gCAAwC3B,QAAQ,CAAC4B,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAK,QAAA,SAAS,EAAElE,MAAM,CAACmE,IAAvB;AAAA,6BAAoC/B,KAAK,GAAGG,OAAO,CAAC2B,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CAtHD;;GAAI5D,Q;UAwEWJ,W;;;KAxEXI,Q;AAwHJ,eAAeA,QAAf","sourcesContent":["import styles from './PlayQuiz.module.css'\nimport Button from '../UI/Button/Button'\nimport {useSelector} from 'react-redux';\nimport { useRef, useState } from 'react';\nimport Input from '../UI/Input/Input';\n\nlet PlayQuiz = (props) =>{\n\n\n    let returnOp=(a,b,opr)=>{\n        switch(opr)\n        {\n            case '+' : \n            return (a+b);\n            break;\n            case '-' : \n            return (a-b);\n            break;\n            case '/' : \n            return (a/b);\n            break;\n            case '*' : \n            return (a*b);\n            break; \n            default :\n            return 'n.a'\n        }\n    }\n\n    let checkAns = (data,flag) => {\n        if(flag)\n        {\n            if(data==result)\n            {\n                correctP.current.style.display = 'initial';\n            }\n            else{\n                wrongP.current.style.display = 'initial';\n            }\n            return;\n        }\n        else{\n            //update visited\n        changeVisited((previousState)=>{\n            let newState = previousState;\n            newState.push(quesList[currentQuestion]);\n            return newState;\n        })\n        if(data.trim()=='')\n        {\n            //update not answered\n            changeUnAns((previousState)=>{\n                let newState = previousState;\n                newState.push(quesList[currentQuestion]);\n                return newState;\n            })\n        }\n        if(data==result)\n        {\n            //update correct\n            changeCorrect((previousState)=>{\n                let newState = previousState;\n                newState.push(quesList[currentQuestion]);\n                return newState;}\n                )\n        }\n        else{ \n            changeInCorrect((previousState)=>{\n                let newState = previousState;\n                newState.push(quesList[currentQuestion]);\n                return newState;}\n                )\n        }\n        changeCurrentQuestion((previousState)=>previousState++);\n    }\n    }\n\n\n    let data = useSelector((state)=>state.userInfo[props.currentPlayer-1]);\n    let uname = data.uname;\n    let total = data.questions;\n    let [correct1,changeCorrect] = useState([]);\n    let [visited,changeVisited] = useState([]);\n    let [unAns,changeUnAns] = useState([]);\n    let [incorrect,changeInCorrect] = useState([]);\n    let quesList = data.questionsList;\n    let [currentQuestion,changeCurrentQuestion] = useState(0);\n    let oprOption = ['+','-','/','*'];\n    let op1 = quesList[currentQuestion].op1;\n    let op2 = quesList[currentQuestion].op1\n    let opr = oprOption[quesList[currentQuestion].opr-1];  \n    console.log(opr);\n    let result = returnOp(op1,op2,opr);\n    let ansInp = useRef();\n    let correctP = useRef();\n    let wrongP = useRef();\n    let finalQuestion = (currentQuestion===total-1)?true:false;\n    return(\n        <div className={styles[\"game-panel\"]}>\n            <div id='quesNo' className={styles.questionNo}>Question Number : {currentQuestion+1}</div>\n            <div id='question' className={styles.question}>\n            <div className={styles.op} id='op1'>{op1}</div>\n            <div id='operand' className={styles.op}>{opr}</div>\n            <div className={styles.op} id='op2'>{op2}</div>\n            <div className={styles.op}>=</div>\n            <Input data={{className:styles.opr,id:'op3',ref:ansInp}}></Input>\n            </div>\n            <div id='correctAns' className={styles.correct}>\n            <p className={styles.correctAns} ref={correctP}>Correct Answer !</p>\n            <p className={styles.wrongAns} ref={wrongP}>Wrong Answer, Correct Answer is {result}</p>\n            </div>\n            <div id='btn'>\n            <Button data={{id:'checkAns',className:styles.btn,onClick:(e)=>{checkAns(ansInp.current.value,true)}}}>Check Answer</Button>\n            {!finalQuestion&&<Button data={{id:'nextQues',className:styles.btn,onClick:(e)=>{checkAns(ansInp.current.value,false)}}}>Next Question</Button>}\n            {finalQuestion&&<Button data={{id:'finishQues',className:styles.btn,onClick:(e)=>{console.log('time to end')}}}>Finish Quiz</Button>}\n            </div>\n            <div className={styles.uname}>{uname}</div>\n            <div id='status' className={styles.status}>\n            <div className={styles.questionLeft}>Total : {total}</div>\n            <div className={styles.score}>Correct: {correct1.length}</div>\n            <div className={styles.left}>Left: {total - visited.length}</div>\n            </div>\n        </div>\n    )    \n}\n\nexport default PlayQuiz;\n\n"]},"metadata":{},"sourceType":"module"}