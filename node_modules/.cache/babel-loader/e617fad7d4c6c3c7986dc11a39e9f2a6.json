{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek/Desktop/quiz-me/src/components/Questions/Questions.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect, useState, useRef } from 'react';\nimport styles from '../PlayQuiz/PlayQuiz.module.css';\nimport Button from '../UI/Button/Button';\nimport Input from '../UI/Input/Input';\nimport { useDispatch } from 'react-redux';\nimport UserActions from '../../store/userslice';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet returnOp = (a, b, opr) => {\n  switch (opr) {\n    case '+':\n      return a + b;\n\n    case '-':\n      return a - b;\n\n    case '/':\n      return Math.floor(a / b);\n\n    case 'x':\n      return a * b;\n\n    default:\n      return 'n.a';\n  }\n};\n\nlet Question = props => {\n  _s();\n\n  console.log(\"here are my props\", props);\n  let no = props.Qno;\n  let img1 = props.Question.question[0];\n  let img2 = props.Question.question[0];\n  let ans = returnOp(op1, op2, opr);\n  let [ansInp, changeAnsInp] = useState('');\n  let isFinal = no == props.total - 1 ? true : false;\n  let [isCorrect, changeIsCorrect] = useState(false);\n  let [isIncorrect, changeIsIncorrect] = useState(false);\n  let [isAnswered, changeIsAnswered] = useState(false);\n  let dispatchFn = useDispatch();\n  let next = useRef();\n  let finish = useRef();\n  let inp = useRef();\n\n  let checkAnswer = flag => {\n    inp.current.setAttribute('disabled', 'true'); //checkAns\n\n    let data = ansInp;\n\n    if (data.trim().length == 0) {\n      changeIsAnswered(false);\n      changeIsCorrect(false);\n      changeIsIncorrect(true);\n    } else if (data == ans) {\n      changeIsAnswered(true);\n      changeIsIncorrect(false);\n      changeIsCorrect(true);\n    } else {\n      changeIsAnswered(true);\n      changeIsCorrect(false);\n      changeIsIncorrect(true);\n    }\n\n    if (flag) {\n      //when next Question is pressed;\n      changeAnsInp('');\n      inp.current.removeAttribute('disabled');\n      dispatchFn(UserActions.changeAns({\n        id: no,\n        user: props.user,\n        isAns: isAnswered\n      }));\n      dispatchFn(UserActions.changeCorrect({\n        id: no,\n        user: props.user,\n        isCorrect: isCorrect\n      }));\n      props.nextQues();\n    }\n  };\n\n  useEffect(() => {\n    changeIsAnswered(false);\n    changeIsCorrect(false);\n    changeIsIncorrect(false);\n  }, [no]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quesNo\",\n      className: styles.questionNo,\n      children: [\"Question Number : \", no + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"question\",\n      className: styles.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"correctAns\",\n      className: styles.correct,\n      children: [isCorrect && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.correctAns,\n        children: \"Correct Answer !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 31\n      }, this), isIncorrect && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.wrongAns,\n        children: [\"Wrong Answer, Correct Answer is \", ans]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"btn-wrap\"],\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        data: {\n          id: 'checkAns',\n          className: styles.btn,\n          onClick: () => {\n            checkAnswer(false);\n          }\n        },\n        children: \"Submit Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), !isFinal && /*#__PURE__*/_jsxDEV(Button, {\n        data: {\n          id: 'nextQues',\n          className: styles.btn,\n          ref: next,\n          onClick: () => {\n            checkAnswer(true);\n          }\n        },\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 30\n      }, this), isFinal && /*#__PURE__*/_jsxDEV(Button, {\n        data: {\n          id: 'finishQues',\n          className: styles.btn,\n          ref: finish,\n          onClick: () => {\n            checkAnswer(true);\n          }\n        },\n        children: \"Finish Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Question, \"fb4rcpaQEx24l2xEF0w82uOmho4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/abhishek/Desktop/quiz-me/src/components/Questions/Questions.js"],"names":["Fragment","useEffect","useState","useRef","styles","Button","Input","useDispatch","UserActions","React","returnOp","a","b","opr","Math","floor","Question","props","console","log","no","Qno","img1","question","img2","ans","op1","op2","ansInp","changeAnsInp","isFinal","total","isCorrect","changeIsCorrect","isIncorrect","changeIsIncorrect","isAnswered","changeIsAnswered","dispatchFn","next","finish","inp","checkAnswer","flag","current","setAttribute","data","trim","length","removeAttribute","changeAns","id","user","isAns","changeCorrect","nextQues","questionNo","correct","correctAns","wrongAns","className","btn","onClick","ref"],"mappings":"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","sourcesContent":["import { Fragment, useEffect, useState,useRef } from 'react'\nimport styles from '../PlayQuiz/PlayQuiz.module.css'\nimport Button from '../UI/Button/Button'\nimport Input from '../UI/Input/Input';\nimport {useDispatch} from 'react-redux';\nimport UserActions from '../../store/userslice'\nimport React from 'react';\n\nlet returnOp=(a,b,opr)=>{\n    switch(opr)\n    {\n        case '+' : \n        return (a+b);\n        \n        case '-' : \n        return (a-b);\n        \n        case '/' : \n        return Math.floor(a/b);\n        \n        case 'x' : \n        return (a*b);\n        \n        default :\n        return 'n.a'\n    }\n}\n\nlet Question = (props) => {\n\n    console.log(\"here are my props\",props);\n    let no = props.Qno;\n    let img1 = props.Question.question[0];\n    let img2 = props.Question.question[0];\n    let ans = returnOp(op1,op2,opr);\n    let [ansInp,changeAnsInp] = useState('');\n    let isFinal = (no==props.total-1)?true:false;\n    let [isCorrect,changeIsCorrect] = useState(false);\n    let [isIncorrect,changeIsIncorrect] = useState(false);\n    let [isAnswered,changeIsAnswered] = useState(false);\n    let dispatchFn = useDispatch();\n    let next = useRef();\n    let finish = useRef();\n    let inp = useRef();\n    \n    let checkAnswer =(flag)=>{\n         inp.current.setAttribute('disabled','true');\n         //checkAns\n        let data = ansInp;\n        if(data.trim().length==0)\n            {\n                changeIsAnswered(false);\n                changeIsCorrect(false);\n                changeIsIncorrect(true);\n            }\n            else if(data==ans)\n            {   changeIsAnswered(true);\n                changeIsIncorrect(false);\n                changeIsCorrect(true);\n            }\n            else{\n                changeIsAnswered(true);\n                changeIsCorrect(false);\n                changeIsIncorrect(true);\n            }\n        if(flag){\n            //when next Question is pressed;\n            changeAnsInp('');\n            inp.current.removeAttribute('disabled');\n            dispatchFn(UserActions.changeAns({id:no,user:props.user,isAns:isAnswered}));\n            dispatchFn(UserActions.changeCorrect({id:no,user:props.user,isCorrect:isCorrect}));\n            props.nextQues();\n        }\n    }\n    useEffect(()=>{\n        changeIsAnswered(false);\n        changeIsCorrect(false);\n        changeIsIncorrect(false);\n    },[no]);\n    return (\n        <Fragment>\n                <div id='quesNo' className={styles.questionNo}>Question Number : {no+1}</div>\n                <div id='question' className={styles.question}>\n                </div>\n                <div id='correctAns' className={styles.correct}>\n                {isCorrect && <p className={styles.correctAns}>Correct Answer !</p>}\n                {isIncorrect && <p className={styles.wrongAns}>Wrong Answer, Correct Answer is {ans}</p>}\n                </div>\n                <div className={styles[\"btn-wrap\"]}>\n                <Button data={{id:'checkAns',className:styles.btn,onClick:()=>{checkAnswer(false)}}}>Submit Answer</Button>\n                {!isFinal && <Button data={{id:'nextQues',className:styles.btn,ref:next,onClick:()=>{checkAnswer(true)}}}>Next Question</Button>}\n                {isFinal && <Button data={{id:'finishQues',className:styles.btn,ref:finish,onClick:()=>{checkAnswer(true)}}}>Finish Quiz</Button>}\n                </div>\n        </Fragment>\n    )\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}