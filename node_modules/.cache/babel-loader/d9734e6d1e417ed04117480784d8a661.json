{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek/Desktop/quiz-me/src/components/EndQuiz/EndQuiz.js\",\n    _s = $RefreshSig$();\n\nimport styles from './EndQuiz.module.css';\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport Button from '../UI/Button/Button';\nimport QuestionSummary from '../QuestionSummary/QuestionSummary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet EndQuiz = props => {\n  _s();\n\n  let data = useSelector(state => state.userInfo[props.currentPlayer - 1]);\n  let quesList = data.questionsList;\n  let [questionNum, changeQuesNo] = useState(0);\n  console.log(quesList);\n  let userName = data.uname;\n  let total = data.questions;\n  let correctNo = quesList.reduce((count, item) => {\n    if (item.correct) {\n      return +count + 1;\n    } else {\n      return +count + 0;\n    }\n  }, 0);\n  let Unanswered = quesList.reduce((count, item) => {\n    if (item.ans) {\n      return +count + 0;\n    } else {\n      return +count + 1;\n    }\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"summary-board\"],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.uname,\n      children: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.summary,\n      children: quesList.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(QuestionSummary, {\n          questionNum: index + 1,\n          question: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"status\",\n      className: styles.status,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.info,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.questionLeft,\n          children: [\"Total : \", total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.score,\n          children: [\"Correct: \", correctNo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.score,\n          children: [\"Not Answered: \", Unanswered]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.score,\n          children: [\"Incorrect: \", total - (correctNo + Unanswered)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        data: {\n          'type': 'button',\n          'className': styles.btn,\n          onClick: () => {}\n        },\n        children: \"Quiz Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EndQuiz, \"Ak5Hx2OR4aV7dUoJcL2EGcjWUz0=\", false, function () {\n  return [useSelector];\n});\n\n_c = EndQuiz;\nexport default EndQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"EndQuiz\");","map":{"version":3,"sources":["/Users/abhishek/Desktop/quiz-me/src/components/EndQuiz/EndQuiz.js"],"names":["styles","useSelector","useState","Button","QuestionSummary","EndQuiz","props","data","state","userInfo","currentPlayer","quesList","questionsList","questionNum","changeQuesNo","console","log","userName","uname","total","questions","correctNo","reduce","count","item","correct","Unanswered","ans","summary","map","index","status","info","questionLeft","score","btn","onClick"],"mappings":"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","sourcesContent":["import styles from './EndQuiz.module.css'\nimport {useSelector} from 'react-redux'\nimport {useState} from 'react'\nimport Button from '../UI/Button/Button'\nimport QuestionSummary from '../QuestionSummary/QuestionSummary'\n\nlet EndQuiz = (props) =>{\n    let data = useSelector((state)=>state.userInfo[props.currentPlayer-1]);\n    let quesList = data.questionsList;\n    let [questionNum,changeQuesNo] = useState(0);\n    console.log(quesList);\n\n\n    let userName = data.uname;\n    let total = data.questions;\n    let correctNo = quesList.reduce((count,item)=>{\n        if(item.correct)\n        {\n            \n            return +count+1;\n        }\n        else{\n            return +count+0;\n        }\n    },0)\n    let Unanswered = quesList.reduce((count,item)=>{\n        if(item.ans)\n        {\n            \n            return +count+0;\n        }\n        else{\n            return +count+1;\n        }\n    },0)\n\n\n    return(\n        <div className={styles[\"summary-board\"]}>\n        <div className={styles.uname}>{userName}</div>\n        <div className={styles.summary}>\n        {quesList.map((item,index)=>{\n            return <QuestionSummary key={index} questionNum = {index+1} question={item}/>\n        })}\n        </div>\n        <div id='status' className={styles.status}>\n        <div className={styles.info}>\n        <div className={styles.questionLeft}>Total : {total}</div>\n        <div className={styles.score}>Correct: {correctNo}</div>\n        <div className={styles.score}>Not Answered: {Unanswered}</div>\n        <div className={styles.score}>Incorrect: {total- (correctNo+Unanswered)}</div>\n        </div>\n        <Button data = {{'type':'button','className': styles.btn, onClick: ()=>{}}}>Quiz Again</Button>\n        </div>\n        </div>  \n    )    \n}\n\nexport default EndQuiz;"]},"metadata":{},"sourceType":"module"}