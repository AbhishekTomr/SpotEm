{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";var userSlice=createSlice({name:'UserInfo',initialState:[],reducers:{setData:function setData(state,action){state.push({id:state.length+1,uname:action.payload.newUser.uname,questions:action.payload.newUser.questions?action.payload.newUser.questions:10,gameState:action.payload.newUser.gameState,questionsList:action.payload.newUser.questionsList});},changeAns:function changeAns(state,action){state[action.payload.user].questionsList[action.payload.id].ans=action.payload.isAns;},changeCorrect:function changeCorrect(state,action){state[action.payload.user].questionsList[action.payload.id].correct=action.payload.isCorrect;}}});var UserActions=userSlice.actions;export{userSlice};export default UserActions;","map":{"version":3,"sources":["/Users/abhishek/Desktop/quiz-me/src/store/userslice.js"],"names":["createSlice","userSlice","name","initialState","reducers","setData","state","action","push","id","length","uname","payload","newUser","questions","gameState","questionsList","changeAns","user","ans","isAns","changeCorrect","correct","isCorrect","UserActions","actions"],"mappings":"AAAA,OAAQA,WAAR,KAA0B,kBAA1B,CAGA,GAAIC,CAAAA,SAAS,CAAGD,WAAW,CAAC,CACxBE,IAAI,CAAG,UADiB,CAExBC,YAAY,CAAG,EAFS,CAGxBC,QAAQ,CAAE,CACNC,OAAO,CAAG,iBAACC,KAAD,CAAOC,MAAP,CAAkB,CACxBD,KAAK,CAACE,IAAN,CAAW,CACXC,EAAE,CAAGH,KAAK,CAACI,MAAN,CAAa,CADP,CAEXC,KAAK,CAAGJ,MAAM,CAACK,OAAP,CAAeC,OAAf,CAAuBF,KAFpB,CAGXG,SAAS,CAAGP,MAAM,CAACK,OAAP,CAAeC,OAAf,CAAuBC,SAAvB,CAAiCP,MAAM,CAACK,OAAP,CAAeC,OAAf,CAAuBC,SAAxD,CAAkE,EAHnE,CAIXC,SAAS,CAAGR,MAAM,CAACK,OAAP,CAAeC,OAAf,CAAuBE,SAJxB,CAKXC,aAAa,CAAGT,MAAM,CAACK,OAAP,CAAeC,OAAf,CAAuBG,aAL5B,CAAX,EAQH,CAVK,CAWNC,SAAS,CAAG,mBAACX,KAAD,CAAOC,MAAP,CAAkB,CAC1BD,KAAK,CAACC,MAAM,CAACK,OAAP,CAAeM,IAAhB,CAAL,CAA2BF,aAA3B,CAAyCT,MAAM,CAACK,OAAP,CAAeH,EAAxD,EAA4DU,GAA5D,CAAkEZ,MAAM,CAACK,OAAP,CAAeQ,KAAjF,CACH,CAbK,CAcNC,aAAa,CAAG,uBAACf,KAAD,CAAOC,MAAP,CAAkB,CAC9BD,KAAK,CAACC,MAAM,CAACK,OAAP,CAAeM,IAAhB,CAAL,CAA2BF,aAA3B,CAAyCT,MAAM,CAACK,OAAP,CAAeH,EAAxD,EAA4Da,OAA5D,CAAsEf,MAAM,CAACK,OAAP,CAAeW,SAArF,CACH,CAhBK,CAHc,CAAD,CAA3B,CAyBA,GAAIC,CAAAA,WAAW,CAAGvB,SAAS,CAACwB,OAA5B,CACA,OAAQxB,SAAR,EACA,cAAeuB,CAAAA,WAAf","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\"\n\n\nlet userSlice = createSlice({\n    name : 'UserInfo',\n    initialState : [],\n    reducers: {\n        setData : (state,action) => {\n            state.push({\n            id : state.length+1,\n            uname : action.payload.newUser.uname,\n            questions : action.payload.newUser.questions?action.payload.newUser.questions:10,\n            gameState : action.payload.newUser.gameState,\n            questionsList : action.payload.newUser.questionsList\n            }\n            )    \n        },\n        changeAns : (state,action) => {\n            state[action.payload.user].questionsList[action.payload.id].ans = action.payload.isAns;\n        },\n        changeCorrect : (state,action) => {\n            state[action.payload.user].questionsList[action.payload.id].correct = action.payload.isCorrect;\n        }\n    }\n    }\n)\n\n\nlet UserActions = userSlice.actions;\nexport {userSlice};\nexport default UserActions;"]},"metadata":{},"sourceType":"module"}