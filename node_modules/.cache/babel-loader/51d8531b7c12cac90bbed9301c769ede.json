{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nlet userSlice = createSlice({\n  name: 'UserInfo',\n  initialState: [],\n  reducers: {\n    setData: (state, action) => {\n      state.push({\n        id: state.length + 1,\n        uname: action.payload.newUser.uname,\n        questions: action.payload.newUser.questions ? action.payload.newUser.questions : 10,\n        gameState: action.payload.newUser.gameState\n      });\n    },\n    changeGameState: (state, payload) => {\n      state[payload.id].gameState = payload.gameState;\n    }\n  }\n});\nlet UserActions = userSlice.actions;\nexport { userSlice };\nexport default UserActions;","map":{"version":3,"sources":["/Users/abhishek/Desktop/quiz-me/src/store/userslice.js"],"names":["createSlice","userSlice","name","initialState","reducers","setData","state","action","push","id","length","uname","payload","newUser","questions","gameState","changeGameState","UserActions","actions"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAGA,IAAIC,SAAS,GAAGD,WAAW,CAAC;AACxBE,EAAAA,IAAI,EAAG,UADiB;AAExBC,EAAAA,YAAY,EAAG,EAFS;AAGxBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AACxBD,MAAAA,KAAK,CAACE,IAAN,CAAW;AACXC,QAAAA,EAAE,EAAGH,KAAK,CAACI,MAAN,GAAa,CADP;AAEXC,QAAAA,KAAK,EAAGJ,MAAM,CAACK,OAAP,CAAeC,OAAf,CAAuBF,KAFpB;AAGXG,QAAAA,SAAS,EAAGP,MAAM,CAACK,OAAP,CAAeC,OAAf,CAAuBC,SAAvB,GAAiCP,MAAM,CAACK,OAAP,CAAeC,OAAf,CAAuBC,SAAxD,GAAkE,EAHnE;AAIXC,QAAAA,SAAS,EAAGR,MAAM,CAACK,OAAP,CAAeC,OAAf,CAAuBE;AAJxB,OAAX;AAOH,KATK;AAUNC,IAAAA,eAAe,EAAE,CAACV,KAAD,EAAOM,OAAP,KAAmB;AAChCN,MAAAA,KAAK,CAACM,OAAO,CAACH,EAAT,CAAL,CAAkBM,SAAlB,GAA8BH,OAAO,CAACG,SAAtC;AACH;AAZK;AAHc,CAAD,CAA3B;AAqBA,IAAIE,WAAW,GAAGhB,SAAS,CAACiB,OAA5B;AACA,SAAQjB,SAAR;AACA,eAAegB,WAAf","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\"\n\n\nlet userSlice = createSlice({\n    name : 'UserInfo',\n    initialState : [],\n    reducers: {\n        setData : (state,action) => {\n            state.push({\n            id : state.length+1,\n            uname : action.payload.newUser.uname,\n            questions : action.payload.newUser.questions?action.payload.newUser.questions:10,\n            gameState : action.payload.newUser.gameState\n            }\n            )    \n        },\n        changeGameState: (state,payload) => {\n            state[payload.id].gameState = payload.gameState;\n        }\n    }\n    }\n)\n\n\nlet UserActions = userSlice.actions;\nexport {userSlice};\nexport default UserActions;"]},"metadata":{},"sourceType":"module"}