[{"/Users/abhishek/Desktop/quiz-me/src/index.js":"1","/Users/abhishek/Desktop/quiz-me/src/App.js":"2","/Users/abhishek/Desktop/quiz-me/src/reportWebVitals.js":"3","/Users/abhishek/Desktop/quiz-me/src/components/QuizWindow/QuizWindow.js":"4","/Users/abhishek/Desktop/quiz-me/src/components/StartQuiz/StartQuiz.js":"5","/Users/abhishek/Desktop/quiz-me/src/components/UI/Button/Button.js":"6","/Users/abhishek/Desktop/quiz-me/src/components/UI/Input/Input.js":"7","/Users/abhishek/Desktop/quiz-me/src/components/PlayQuiz/PlayQuiz.js":"8","/Users/abhishek/Desktop/quiz-me/src/components/EndQuiz/EndQuiz.js":"9","/Users/abhishek/Desktop/quiz-me/src/store/store.js":"10","/Users/abhishek/Desktop/quiz-me/src/store/userslice.js":"11","/Users/abhishek/Desktop/quiz-me/src/components/Questions/Questions.js":"12","/Users/abhishek/Desktop/quiz-me/src/components/QuestionSummary/QuestionSummary.js":"13","/Users/abhishek/Desktop/quiz-me/src/components/UI/Header/Header.js":"14","/Users/abhishek/Desktop/quiz-me/src/store/dataItem.js":"15","/Users/abhishek/Desktop/quiz-me/src/components/UI/Image/Image.js":"16"},{"size":500,"mtime":1643794805252,"results":"17","hashOfConfig":"18"},{"size":439,"mtime":1648885335067,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1643794805253,"results":"20","hashOfConfig":"18"},{"size":1334,"mtime":1648897121185,"results":"21","hashOfConfig":"18"},{"size":3250,"mtime":1648897123739,"results":"22","hashOfConfig":"18"},{"size":154,"mtime":1648897131626,"results":"23","hashOfConfig":"18"},{"size":151,"mtime":1648897145681,"results":"24","hashOfConfig":"18"},{"size":1566,"mtime":1648897090300,"results":"25","hashOfConfig":"18"},{"size":1851,"mtime":1648897077921,"results":"26","hashOfConfig":"18"},{"size":184,"mtime":1643811132837,"results":"27","hashOfConfig":"18"},{"size":958,"mtime":1648896220482,"results":"28","hashOfConfig":"18"},{"size":2725,"mtime":1648897099376,"results":"29","hashOfConfig":"18"},{"size":661,"mtime":1648897103456,"results":"30","hashOfConfig":"18"},{"size":211,"mtime":1648897134315,"results":"31","hashOfConfig":"18"},{"size":3170,"mtime":1648894935026,"results":"32","hashOfConfig":"18"},{"size":217,"mtime":1648897140038,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"p5wdz5",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/abhishek/Desktop/quiz-me/src/index.js",[],[],["90","91"],"/Users/abhishek/Desktop/quiz-me/src/App.js",[],[],["92","93"],"/Users/abhishek/Desktop/quiz-me/src/reportWebVitals.js",[],[],"/Users/abhishek/Desktop/quiz-me/src/components/QuizWindow/QuizWindow.js",[],[],["94","95"],"/Users/abhishek/Desktop/quiz-me/src/components/StartQuiz/StartQuiz.js",["96","97","98","99"],[],"import Button from '../UI/Button/Button'\nimport styles from './StartQuiz.module.css'\nimport Input from '../UI/Input/Input'\nimport {useDispatch, useSelector} from 'react-redux';\nimport { useState } from 'react';\nimport UserActions from '../../store/userslice'\nimport React from 'react';\nimport quetionsList from '../../store/dataItem'\n\nlet StartQuiz = (props) =>{ \n    let dispatchFn = useDispatch();\n    let id = useSelector((state)=>state.userInfo.length+1); \n    let [uname,changeUname] = useState(''); //state for username\n    let [ques,changeQues] = useState (10); // state for  number of questions\n    let quesList = [];\n\n    let ValidateMe = (element1,type) => {\n        if(type=='text')\n        {\n            changeUname(element1.value);\n            if(element1.value.trim().length==0)\n            {\n                element1.classList.add(styles.invalid);\n                return false;\n            }\n            else{\n                element1.classList.remove(styles.invalid);\n                return true;\n            }\n        }\n        if(type=='num'){\n        changeQues(element1.value);\n        if(element1.value=='' || element1.value>10 || element1.value<1)\n        {\n            element1.classList.add(styles.invalid);\n            return false;\n        }\n        else{\n            element1.classList.remove(styles.invalid);\n            return true;\n            \n        }\n        }\n    }\n\n   \n\n    let startGame = () => {\n        let inpName = document.getElementById('user-name');\n        let inpQues = document.getElementById('ques');\n        console.log(inpName,inpQues);\n        if(!ValidateMe(inpName,'text'))\n        {\n            inpName.focus();\n        }\n        else if(!ValidateMe(inpQues,'num'))\n        {\n            inpQues.focus();\n        }\n        else{\n            props.startQuiz(1);\n            console.log(\"questions\",quetionsList);\n            for(let i = 0;i<ques;i++)\n            {\n                let q = quetionsList[i];\n                quesList.push(q);\n            }\n            console.log(\"here is queslist\",quesList);\n            let newUser = {\n            id : id,\n            uname : uname,\n            gameState : 1,\n            questions : ques,\n            questionsList : quesList\n        }\n        props.player(id);\n        dispatchFn(UserActions.setData({newUser}))\n        }\n    }\n    return(\n            <div className={styles[\"start-info\"]}>\n            <div className={`${styles.user} ${styles.feild}`}>\n            <label htmlFor='user-name'>User Name : </label>\n            <Input data={{type:'text',id:'user-name',name:'user-name',className:styles.inp,value:uname,onBlur:(e)=>{ValidateMe(e.target,'text')},onChange:(e)=>{ValidateMe(e.target,'text')}}}></Input>\n            </div>\n            <div className={`${styles.ques} ${styles.feild}`}>\n            <label htmlFor='ques'>No of Questions : </label>\n            <Input data={{type:'number',min:1,max:10,id:'ques',name:'ques',className:styles.inp,value:ques,onBlur:(e)=>{ValidateMe(e.target,'num')},onChange:(e)=>{ValidateMe(e.target,'num')}}}></Input>\n            </div>\n            <Button data = {{'type':'button','className': styles.btn, onClick: startGame}}>Start Quiz</Button>\n            </div>\n    )\n} \n\nexport default StartQuiz;","/Users/abhishek/Desktop/quiz-me/src/components/UI/Button/Button.js",[],[],"/Users/abhishek/Desktop/quiz-me/src/components/UI/Input/Input.js",[],[],"/Users/abhishek/Desktop/quiz-me/src/components/PlayQuiz/PlayQuiz.js",["100"],[],"import styles from './PlayQuiz.module.css'\nimport Question from \"../Questions/Questions\"\nimport {useSelector} from 'react-redux';\nimport {useState} from 'react';\nimport React from 'react';\n\nlet PlayQuiz = (props) => {\n    let data = useSelector((state)=>state.userInfo[props.currentPlayer-1]);\n    let quesList = data.questionsList;//holds questions\n    let [questionNum,changeQuesNo] = useState(0);\n    let userName = data.uname;\n    let total = data.questions;\n    \n    let correctNo = quesList.reduce((count,item)=>{\n        if(item.correct)\n        {\n            \n            return +count+1;\n        }\n        else{\n            return +count+0;\n        }\n    },0)\n\n    let nextQues = ()=>{\n        if(questionNum!==total-1)\n        changeQuesNo(previous=>previous+1);\n        else if(questionNum==total-1)\n        props.endQuiz(2);\n    }\n\n\n    return(\n            <div className={styles[\"game-panel\"]}>\n                <Question \n                total = {total}\n                Qno = {questionNum}\n                user = {props.currentPlayer-1}\n                Question = {quesList[questionNum]} \n                nextQues={nextQues}/>\n                <div className={styles.uname}>{userName}</div>\n                <div id='status' className={styles.status}>\n                <div className={styles.questionLeft}>Total : {total}</div>\n                <div className={styles.score}>Correct: {correctNo}</div>\n                <div className={styles.left}>Left: {total- questionNum}</div>\n                </div>\n            </div>  \n    )\n}\n\nexport default PlayQuiz;","/Users/abhishek/Desktop/quiz-me/src/components/EndQuiz/EndQuiz.js",["101","102"],[],"import styles from './EndQuiz.module.css'\nimport React from 'react'; \nimport {useSelector} from 'react-redux'\nimport {useState} from 'react'\nimport Button from '../UI/Button/Button'\nimport QuestionSummary from '../QuestionSummary/QuestionSummary'\n\nlet EndQuiz = (props) =>{\n    let data = useSelector((state)=>state.userInfo[props.currentPlayer-1]);\n    let quesList = data.questionsList;\n    let [questionNum,changeQuesNo] = useState(0);\n    console.log(quesList);\n    console.log(data);\n\n\n    let userName = data.uname;\n    let total = data.questions;\n    let correctNo = quesList.reduce((count,item)=>{\n        if(item.correct)\n        {\n            \n            return +count+1;\n        }\n        else{\n            return +count+0;\n        }\n    },0)\n    let Unanswered = quesList.reduce((count,item)=>{\n        if(item.ans)\n        {\n            \n            return +count+0;\n        }\n        else{\n            return +count+1;\n        }\n    },0)\n\n\n    return(\n        <div className={styles[\"summary-board\"]}>\n        <div className={styles.uname}>{userName}</div>\n        <div className={styles.summary}>\n        {quesList.map((item,index)=>{\n            return <QuestionSummary key={index} questionNum = {index+1} question={item}/>\n        })}\n        </div>\n        <div id='status' className={styles.status}>\n        <div className={styles.info}>\n        <div className={styles.questionLeft}>Total : {total}</div>\n        <div className={styles.score}>Correct: {correctNo}</div>\n        <div className={styles.score}>Not Answered: {Unanswered}</div>\n        <div className={styles.score}>Incorrect: {total- (correctNo+Unanswered)}</div>\n        </div>\n        <Button data = {{'type':'button','className': styles.btn, onClick: ()=>{props.newQuiz(0)}}}>Quiz Again</Button>\n        </div>\n        </div>  \n    )    \n}\n\nexport default EndQuiz;","/Users/abhishek/Desktop/quiz-me/src/store/store.js",[],[],"/Users/abhishek/Desktop/quiz-me/src/store/userslice.js",[],[],"/Users/abhishek/Desktop/quiz-me/src/components/Questions/Questions.js",["103","104","105","106","107","108"],[],"import { Fragment, useEffect, useState,useRef } from 'react'\nimport styles from '../PlayQuiz/PlayQuiz.module.css'\nimport Button from '../UI/Button/Button'\nimport Input from '../UI/Input/Input';\nimport {useDispatch} from 'react-redux';\nimport UserActions from '../../store/userslice'\nimport React from 'react';\nimport Image from '../UI/Image/Image'\n\n\nlet Question = (props) => {\n\n    console.log(\"here are my props\",props);\n    let no = props.Qno;\n    let img1 = props.Question.question[0];\n    let img2 = props.Question.question[0];\n    let ans = 1;\n    \n    let [ansInp,changeAnsInp] = useState('');\n    let isFinal = (no==props.total-1)?true:false;\n    let [isCorrect,changeIsCorrect] = useState(false);\n    let [isIncorrect,changeIsIncorrect] = useState(false);\n    let [isAnswered,changeIsAnswered] = useState(false);\n    let dispatchFn = useDispatch();\n    let next = useRef();\n    let finish = useRef();\n    let inp = useRef();\n\n    let checkCorrect = (id) =>{\n        if(isAnswered)\n        {\n            return;\n        }\n        if(id==ans)\n        {\n            changeIsAnswered(true);\n            changeIsIncorrect(false);\n            changeIsCorrect(true);\n            \n        }\n        else{\n            changeIsAnswered(true);\n            changeIsIncorrect(true);\n            changeIsCorrect(false);\n        }\n\n    }\n\n    let Next = ()=>{\n        dispatchFn(UserActions.changeAns({id:no,user:props.user,isAns:isAnswered}));\n        dispatchFn(UserActions.changeCorrect({id:no,user:props.user,isCorrect:isCorrect}));\n        props.nextQues();\n    }\n    \n\n    useEffect(()=>{\n        changeIsAnswered(false);\n        changeIsCorrect(false);\n        changeIsIncorrect(false);\n    },[no]);\n    return (\n        <Fragment>\n                <div id='quesNo' className={styles.questionNo}>Question Number : {no+1}</div>\n                <div id='question' className={styles.question}>\n                <Image src={img1.img} data={{onClick:()=>{checkCorrect(1)}}}></Image>\n                <Image src={img2.img} data={{onClick:()=>{checkCorrect(2)}}}></Image>\n                </div>\n                <div id='correctAns' className={styles.correct}>\n                {isCorrect && <p className={styles.correctAns}>Correct Answer !</p>}\n                {isIncorrect && <p className={styles.wrongAns}>Wrong Answer </p>}\n                </div>\n                <div className={styles[\"btn-wrap\"]}>\n                {!isFinal && <Button data={{id:'nextQues',className:styles.btn,ref:next,onClick:Next}}>Next Question</Button>}\n                {isFinal && <Button data={{id:'finishQues',className:styles.btn,ref:finish,onClick:Next}}>Finish Quiz</Button>}\n                </div>\n        </Fragment>\n    )\n}\n\nexport default Question;","/Users/abhishek/Desktop/quiz-me/src/components/QuestionSummary/QuestionSummary.js",["109"],[],"import styles from \"./QuestionSummary.module.css\";\nimport React from 'react';\n\n\nlet QuestionSummary = (props) =>{\n    let no = props.questionNum;\n    let result = null;\n    let finalClass = null;\n    if(!props.question.ans)\n    {\n        finalClass = styles.unans;\n        result = \"unanswered\";\n    }\n    else if(props.question.correct)\n    {\n        finalClass = styles.correct;\n        result = \"Correct\";\n    }\n    else {\n        finalClass = styles.wrong;\n        result = \"Wrong\";\n    }\n    return(\n        <div className={`${styles.question} ${finalClass}`}>\n        {props.questionNum}. {result} \n        </div>\n    )\n} \n\nexport default QuestionSummary;","/Users/abhishek/Desktop/quiz-me/src/components/UI/Header/Header.js",[],[],"/Users/abhishek/Desktop/quiz-me/src/store/dataItem.js",[],[],"/Users/abhishek/Desktop/quiz-me/src/components/UI/Image/Image.js",[],[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"110","replacedBy":"114"},{"ruleId":"112","replacedBy":"115"},{"ruleId":"110","replacedBy":"116"},{"ruleId":"112","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":18,"column":16,"nodeType":"120","messageId":"121","endLine":18,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":21,"column":44,"nodeType":"120","messageId":"121","endLine":21,"endColumn":46},{"ruleId":"118","severity":1,"message":"119","line":31,"column":16,"nodeType":"120","messageId":"121","endLine":31,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":33,"column":26,"nodeType":"120","messageId":"121","endLine":33,"endColumn":28},{"ruleId":"118","severity":1,"message":"119","line":28,"column":28,"nodeType":"120","messageId":"121","endLine":28,"endColumn":30},{"ruleId":"122","severity":1,"message":"123","line":11,"column":10,"nodeType":"124","messageId":"125","endLine":11,"endColumn":21},{"ruleId":"122","severity":1,"message":"126","line":11,"column":22,"nodeType":"124","messageId":"125","endLine":11,"endColumn":34},{"ruleId":"122","severity":1,"message":"127","line":4,"column":8,"nodeType":"124","messageId":"125","endLine":4,"endColumn":13},{"ruleId":"122","severity":1,"message":"128","line":19,"column":10,"nodeType":"124","messageId":"125","endLine":19,"endColumn":16},{"ruleId":"122","severity":1,"message":"129","line":19,"column":17,"nodeType":"124","messageId":"125","endLine":19,"endColumn":29},{"ruleId":"118","severity":1,"message":"119","line":20,"column":22,"nodeType":"120","messageId":"121","endLine":20,"endColumn":24},{"ruleId":"122","severity":1,"message":"130","line":27,"column":9,"nodeType":"124","messageId":"125","endLine":27,"endColumn":12},{"ruleId":"118","severity":1,"message":"119","line":34,"column":14,"nodeType":"120","messageId":"121","endLine":34,"endColumn":16},{"ruleId":"122","severity":1,"message":"131","line":6,"column":9,"nodeType":"124","messageId":"125","endLine":6,"endColumn":11},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],["132"],["133"],["132"],["133"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'questionNum' is assigned a value but never used.","Identifier","unusedVar","'changeQuesNo' is assigned a value but never used.","'Input' is defined but never used.","'ansInp' is assigned a value but never used.","'changeAnsInp' is assigned a value but never used.","'inp' is assigned a value but never used.","'no' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]